{"version":3,"sources":["components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileStatus.jsx","components/Profile/ProfileInfo/ProfileDataForm.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","descriptionBlock","mainPhoto","contact","postsBlock","posts","item","ProfileStatusWithHooks","React","Component","props","_useState","useState","_useState2","Object","slicedToArray","editMode","setEditMode","_useState3","status","_useState4","setStatus","useEffect","react_default","a","createElement","onDoubleClick","onChange","e","currentTarget","value","autoFocus","onBlur","updateStatus","ProfileDataFormReduxForm","reduxForm","form","_ref","handleSubmit","profile","error","onSubmit","className","style","formSummaryError","createField","Input","type","Textarea","keys","contacts","map","key","s","ProfileData","_ref2","isOwner","gotoEditMode","onClick","fullName","lookingForAJob","lookingForAJobDescription","aboutMe","ProfileInfo_Contact","contactTitle","contactValue","Contact","_ref3","ProfileInfo","savePhoto","saveProfile","Preloader","src","photos","large","userPhoto","target","files","length","ProfileInfo_ProfileDataForm","initialValues","formData","then","ProfileInfo_ProfileData","ProfileInfo_ProfileStatusWithHooks","Post","message","likesCount","maxLength20","maxLengthCreator","AddNewPostForm","Field","name","component","placeholder","validate","required","MyPosts","memo","console","log","postsElements","p","MyPosts_Post_Post","id","createRef","MyPosts_AddNewPostForm","values","addPost","newPostText","MyPostsContainer","connect","state","profilePage","dispatch","addPostActionCreator","Profile","Profile_ProfileInfo_ProfileInfo","MyPosts_MyPostsContainer","ProfileContainer","userId","this","match","params","authorizedUserId","history","push","getUserProfile","getStatus","refreshProfile","prevProps","prevState","snapshot","components_Profile_Profile","assign","compose","auth","isAuth","withRouter"],"mappings":"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","file":"static/js/3.958d4237.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__3bU64\",\"mainPhoto\":\"ProfileInfo_mainPhoto__2EZsE\",\"contact\":\"ProfileInfo_contact__5SXlg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__17Rta\",\"posts\":\"MyPosts_posts__1jSqP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__Ywb1r\"};","import React, {useState, useEffect} from 'react';\r\nimport s from './ProfileInfo.module.css';\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n    let[editMode, setEditMode] = useState(false);\r\n    let[status, setStatus] = useState(props.status);\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status);\r\n    }, [props.status]);\r\n\r\n    const activateEditMode = () => {\r\n         setEditMode(true);\r\n    }\r\n\r\n   const deactivateEditMode = () => {\r\n        setEditMode(false)\r\n       props.updateStatus(status);\r\n    }\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            { !editMode &&\r\n            <div>\r\n                <b>Status:</b> <span onDoubleClick={activateEditMode} >{props.status || \"-------\"}</span>\r\n            </div>\r\n            }\r\n            { editMode &&\r\n            <div>\r\n                <input onChange={onStatusChange}  autoFocus={true} onBlur={deactivateEditMode}\r\n                       value={status}/>\r\n            </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default ProfileStatusWithHooks;","import React from 'react';\r\nimport s from './ProfileInfo.module.css';\r\n\r\nclass ProfileStatus extends React.Component {\r\n    state = {\r\n        editMode: false,\r\n        status: this.props.status\r\n    }\r\n\r\n    activateEditMode = () => {\r\n        this.setState({\r\n            editMode: true\r\n        });\r\n    }\r\n\r\n    deactivateEditMode() {\r\n        this.setState({\r\n            editMode: false\r\n        });\r\n        this.props.updateStatus(this.state.status);\r\n    }\r\n\r\n    onStatusChange = (e) => {\r\n        this.setState({\r\n            status: e.currentTarget.value\r\n        });\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (prevProps.status !== this.props.status)\r\n            this.setState({\r\n                status: this.props.status\r\n            })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {!this.state.editMode &&\r\n                <div>\r\n                    <span onDoubleClick={this.activateEditMode}>{this.props.status || \"-------\"}</span>\r\n                </div>\r\n                }\r\n                {this.state.editMode &&\r\n                <div>\r\n                    <input onChange={this.onStatusChange} autoFocus={true} onBlur={this.deactivateEditMode.bind(this)}\r\n                           value={this.state.status}/>\r\n                </div>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ProfileStatus;","import React from \"react\";\r\nimport s from './ProfileInfo.module.css';\r\nimport {createField, Input, Textarea} from \"../../common/FormsControls/FormsControls\";\r\nimport {reduxForm} from \"redux-form\";\r\nimport style from \"../../common/FormsControls/FormsControls.module.css\";\r\n\r\nconst ProfileDataForm = ({handleSubmit, profile, error}) => {\r\n    return <form onSubmit={handleSubmit}>\r\n        <div><button>save</button></div>\r\n        {error && <div className={style.formSummaryError}>\r\n            {error}\r\n        </div>\r\n        }\r\n        <div>\r\n            <b>Full name</b>: {createField(\"Full name\", \"fullName\", [], Input)}\r\n        </div>\r\n        <div>\r\n            <b>Looking for a job</b>: {createField(\"\", \"lookingForAJob\", [], Input, {type: \"checkbox\"})}\r\n        </div>\r\n        <div>\r\n                <b>My professional skills</b>\r\n            {createField(\"My professional skills\", \"lookingForAJobDescription\", [], Textarea, )}\r\n        </div>\r\n        <div>\r\n            <b>About me</b>\r\n            {createField(\"AboutMe\", \"aboutMe\", [], Textarea, )}\r\n        </div>\r\n        <div>\r\n            <b>Contacts</b>: {Object.keys(profile.contacts).map(key => {\r\n            return <div key={key} className={s.contact}>\r\n            <b>{key}: {createField(key, \"contacts.\" + key, [], Input)} </b>\r\n            </div>\r\n        })}\r\n        </div>\r\n    </form>\r\n}\r\n\r\nconst ProfileDataFormReduxForm = reduxForm({form: \"edit-profile\"})(ProfileDataForm)\r\n\r\n\r\n\r\n\r\nexport default ProfileDataFormReduxForm;\r\n","import React, {useState} from 'react';\r\nimport s from './ProfileInfo.module.css';\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport ProfileStatus from \"./ProfileStatus\"\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\nimport userPhoto from \"../../../assets/images/user.png\";\r\nimport ProfileDataForm from \"./ProfileDataForm\";\r\n\r\nconst ProfileInfo = ({profile, status, updateStatus, isOwner, savePhoto, saveProfile}) => {\r\n\r\n    let[editMode, setEditMode] = useState(false);\r\n\r\n\r\n    if (!profile) {\r\n        return <Preloader/>\r\n    }\r\n\r\n    const onMainPhotoSelected = (e) => {\r\n        if (e.target.files.length) {\r\n            savePhoto(e.target.files[0]);\r\n        }\r\n    }\r\n\r\n    const onSubmit = (formData) => {\r\n        saveProfile(formData).then(\r\n            () => {\r\n                setEditMode(false);\r\n            }\r\n        )\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <div className={s.descriptionBlock}>\r\n                <img src={profile.photos.large || userPhoto} className={s.mainPhoto}/>\r\n                {isOwner && <input type={\"file\"} onChange={onMainPhotoSelected}/>}\r\n                {editMode\r\n                    ? <ProfileDataForm initialValues={profile} profile={profile} onSubmit={onSubmit}/>\r\n                    : <ProfileData gotoEditMode={() => {setEditMode(true)}} profile={profile} isOwner={isOwner}/>}\r\n                <ProfileStatusWithHooks status={status} updateStatus={updateStatus}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst ProfileData = ({profile, isOwner, gotoEditMode}) => {\r\n    return <div>\r\n        { isOwner && <div><button onClick={gotoEditMode}>edit</button></div>}\r\n        <div>\r\n            <b>Full name</b>: {profile.fullName}\r\n        </div>\r\n        <div>\r\n            <b>Looking for a job</b>: {profile.lookingForAJob ? \"yes\" : \"no\"}\r\n        </div>\r\n        {profile.lookingForAJob &&\r\n        <div>\r\n            <b>My professional skills</b>: {profile.lookingForAJobDescription}\r\n        </div>\r\n        }\r\n        <div>\r\n            <b>About me</b>: {profile.aboutMe}\r\n        </div>\r\n        <div>\r\n            <b>Contacts</b>: {Object.keys(profile.contacts).map(key => {\r\n            return <Contact key={key} contactTitle={key} contactValue={profile.contacts[key]}/>\r\n        })}\r\n        </div>\r\n    </div>\r\n}\r\n\r\n\r\nconst Contact = ({contactTitle, contactValue}) => {\r\n    return <div className={s.contact}><b>{contactTitle}</b>: {contactValue}</div>\r\n}\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport s from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n  return (\r\n    <div className={s.item}>\r\n      <img src='https://www.pinclipart.com/picdir/big/581-5811619_transparent-agent-clipart-programmer-cartoon-png.png' />\r\n        { props.message }\r\n          <div>\r\n        <span>like</span> { props.likesCount }\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Post;","import React from 'react';\r\nimport s from './MyPosts.module.css';\r\nimport Post from './Post/Post';\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\";\r\nimport {Textarea} from \"../../common/FormsControls/FormsControls\";\r\n\r\nconst maxLength20 = maxLengthCreator(20);\r\n\r\nlet AddNewPostForm = (props) => {\r\n    return <form onSubmit={props.handleSubmit}>\r\n        <div>\r\n            <Field name=\"newPostText\" component={Textarea} placeholder={\"Post message\"} validate={[required, maxLength20]} />\r\n        </div>\r\n        <div>\r\n            <button>Add post</button>\r\n        </div>\r\n    </form>;\r\n}\r\n\r\nAddNewPostForm = reduxForm({form: \"ProfileAddNewPostForm\"})(AddNewPostForm)\r\n\r\nconst MyPosts = React.memo(props => {\r\n    console.log(\"RENDER YO\");\r\n\r\n    let postsElements =\r\n        props.posts.map(p => <Post key={p.id} message={p.message} likesCount={p.likesCount}/>);\r\n\r\n    let newPostElement = React.createRef();\r\n\r\n    let onAddPost = (values) => {\r\n        props.addPost(values.newPostText);\r\n    }\r\n\r\n\r\n    return (\r\n        <div className={s.postsBlock}>\r\n            <h3>My posts</h3>\r\n            <AddNewPostForm onSubmit={onAddPost}/>\r\n            <div className={s.posts}>\r\n                {postsElements}\r\n            </div>\r\n        </div>\r\n    )\r\n});\r\n\r\n\r\nexport default MyPosts;","import React from 'react';\r\nimport {addPostActionCreator, updateNewPostTextActionCreator} from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (newPostText) => {\r\n            dispatch(addPostActionCreator(newPostText));\r\n        }\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;","import React from 'react';\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n\r\nconst Profile = (props) => {\r\n    return (\r\n        <div>\r\n            <ProfileInfo savePhoto={props.savePhoto}\r\n                         isOwner={props.isOwner}\r\n                         profile={props.profile}\r\n                         status={props.status}\r\n                         saveProfile={props.saveProfile}\r\n                         updateStatus={props.updateStatus}/>\r\n            <MyPostsContainer />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {getStatus, getUserProfile, savePhoto, saveProfile, updateStatus} from \"../../redux/profile-reducer\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {compose} from \"redux\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    refreshProfile() {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId;\r\n            if (!userId) {\r\n                this.props.history.push(\"/login\");\r\n            }\r\n        }\r\n        this.props.getUserProfile(userId);\r\n        this.props.getStatus(userId);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refreshProfile()\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (this.props.match.params.userId != prevProps.match.params.userId) {\r\n            this.refreshProfile()\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Profile {...this.props}\r\n                     isOwner={!this.props.match.params.userId}\r\n                     profile={this.props.profile}\r\n                     status={this.props.status}\r\n                     updateStatus={this.props.updateStatus}\r\n                     savePhoto={this.props.savePhoto}\r\n            />\r\n        )\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return ({\r\n        profile: state.profilePage.profile,\r\n        status: state.profilePage.status,\r\n        authorizedUserId: state.auth.userId,\r\n        isAuth: state.auth.isAuth\r\n    })\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getUserProfile, getStatus, updateStatus, savePhoto, saveProfile}),\r\n    withRouter\r\n)(ProfileContainer);\r\n\r\n\r\n\r\n"],"sourceRoot":""}