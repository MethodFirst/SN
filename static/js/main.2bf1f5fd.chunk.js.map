{"version":3,"sources":["utils/validators/validators.ts","components/common/Paginator/Paginator.module.css","api/Profile-api.ts","redux/profile-reducer.ts","redux/dialogs-reducer.ts","assets/images/user.png","assets/images/preloader.svg","components/Users/users.module.css","api/api.ts","serviceWorker.js","api/Auth-api.ts","api/Security-api.ts","redux/auth-reducer.ts","redux/app-reducer.ts","redux/sidebar-reducer.ts","utils/object-helpers.ts","api/Users-api.ts","redux/users-reducer.ts","redux/redux-store.ts","hoc/withSuspense.tsx","redux/users-selectors.ts","components/common/Paginator/Paginator.tsx","components/Users/User.tsx","components/Users/SearchFormForUsers.tsx","components/Users/Users.tsx","components/Users/UsersContainer.tsx","components/Login/Login.tsx","redux/auth-selectors.ts","components/Header/Header.tsx","App.tsx","index.tsx","components/common/FormsControls/FormsControls.tsx","components/common/FormsControls/FormsControls.module.css","components/common/Preloader/Preloader.tsx"],"names":["__webpack_require__","d","__webpack_exports__","required","maxLengthCreator","value","maxLength","length","concat","module","exports","paginator","pageNumber","selectedPage","profileAPI","userId","instance","get","then","res","data","status","put","photoFile","formData","FormData","append","headers","Content-Type","profile","initialState","posts","id","message","likesCount","actions","addPostActionCreator","newPostText","type","setUserProfile","setStatus","deletePost","postId","savePhotoSuccess","photos","getUserProfile","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","dispatch","wrap","_context","prev","next","sent","stop","_x","apply","this","arguments","getStatus","_ref2","_callee2","_context2","_x2","updateStatus","_ref3","_callee3","_context3","resultCode","t0","_x3","savePhoto","file","_ref4","_callee4","_context4","_x4","saveProfile","_ref5","_callee5","getState","_context5","auth","Error","stopSubmit","_error","messages","abrupt","Promise","reject","_x5","_x6","profileReducer","state","undefined","action","newPost","objectSpread","toConsumableArray","filter","p","dialogs","name","sendMessage","newMessageBody","dialogsReducer","body","C_SN_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_1__","C_SN_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","userPhoto","ResultCodesEnum","ResultCodesEnumForCaptcha","axios__WEBPACK_IMPORTED_MODULE_0__","n","axios","create","withCredentials","baseURL","API-KEY","Boolean","window","location","hostname","match","authAPI","email","password","rememberMe","captcha","post","delete","securityAPI","login","isAuth","captchaUrl","payload","getAuthUserData","meData","_meData$data","_login","Success","getCaptchaUrl","url","authReducer","initialized","sidebarReducer","updateObjectInArray","items","itemId","objPropName","newObjProps","map","u","usersAPI","getUsers","currentPage","pageSize","term","friend","follow","unfollow","users","totalUsersCount","isFetching","followingInProgress","Actions","count","requestUsers","page","totalCount","_followUnfollowFlow","apiMethod","actionCreator","usersReducer","followed","rootReducer","combineReducers","profilePage","dialogsPage","sidebar","usersPage","form","FormReducer","app","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","__store__","withSuspense","WrappedComponent","props","react_default","createElement","Suspense","fallback","Preloader","createSelector","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","getFollowingInProgress","getUsersFilter","Paginator","totalItemsCount","_ref$currentPage","_ref$onPageChanged","onPageChanged","x","_ref$portionSize","portionSize","pagesCount","Math","ceil","pages","i","push","portionCount","_useState","useState","_useState2","slicedToArray","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","className","styles","onClick","cn","defineProperty","key","e","User","user","react_router_dom","to","src","small","disabled","some","userSearchFormValidate","values","UsersSearchForm","React","memo","useSelector","formik_esm","enableReinitialize","initialValues","String","validate","onSubmit","setSubmitting","onFilterChanged","isSubmitting","as","placeholder","Users","useDispatch","history","useHistory","useEffect","parsed","queryString","search","substr","actualPage","actualFilter","Number","query","pathname","folloW","bind","unfolloW","_x7","common_Paginator_Paginator","Users_User","UsersPage","Fragment","pageTitle","Users_Users","LoginReduxForm","reduxForm","handleSubmit","error","createField","Input","style","formSummaryError","LoginPage","react_router","testAccount","CaptchaIsRequired","selectIsAuth","selectCurrentUserLogin","Header","Layout","row","col","span","menu","theme","mode","defaultSelectedKeys","Item","avatar","alt","backgroundColor","icon","UserOutlined","es_button","SubMenu","Menu","Content","Footer","Sider","DialogsContainer","lazy","ProfileContainer","SuspendedDialogs","SuspendedProfile","App","catchAllUnhandledErrors","alert","initializeApp","addEventListener","removeEventListener","layout","Header_Header","padding","breadcrumb","margin","width","height","title","LaptopOutlined","minHeight","exact","path","render","UsersContainer_UsersPage","Login_LoginPage","textAlign","Component","AppContainer","withRouter","connect","promise","all","SN","es","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister","FormControl","_ref$meta","meta","touched","children","hasError","react__WEBPACK_IMPORTED_MODULE_1___default","formControl","Textarea","input","restProps","C_SN_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","assign","validators","component","text","redux_form__WEBPACK_IMPORTED_MODULE_3__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","_assets_images_preloader_svg__WEBPACK_IMPORTED_MODULE_1__","_assets_images_preloader_svg__WEBPACK_IMPORTED_MODULE_1___default","preloader"],"mappings":"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","file":"static/js/main.2bf1f5fd.chunk.js","sourcesContent":["export type FieldValidatorType = (value: string) => string | undefined\r\n\r\n\r\nexport const required: FieldValidatorType = (value) => {\r\n    if (value) return undefined;\r\n\r\n    return \"Field is required\";\r\n\r\n}\r\n\r\n\r\nexport const maxLengthCreator= (maxLength: number): FieldValidatorType => (value) => {\r\n    if (value.length > maxLength) return `Max length is ${maxLength} symbols`\r\n    return undefined;\r\n}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paginator\":\"Paginator_paginator__DvTSB\",\"pageNumber\":\"Paginator_pageNumber__32gG-\",\"selectedPage\":\"Paginator_selectedPage__2-VS7\"};","import {PhotosType, ProfileType} from \"../types/types\";\r\nimport {APIResponseType, instance} from \"./api\";\r\n\r\ntype SavePhotoResponseDataType = {\r\n    photos: PhotosType\r\n}\r\n\r\n\r\nexport const profileAPI = {\r\n    getProfile(userId: number) {\r\n        return instance.get<ProfileType>(`profile/` + userId).then(res => res.data)\r\n    },\r\n    getStatus(userId: number) {\r\n        return instance.get<string>(`profile/status/` + userId).then(res => res.data)\r\n    },\r\n    updateStatus(status: string) {\r\n        return instance.put<APIResponseType>(`profile/status`, {status: status}).then(res => res.data)\r\n    },\r\n    savePhoto(photoFile: any) {\r\n        const formData = new FormData();\r\n        formData.append(\"image\", photoFile);\r\n\r\n        return instance.put<APIResponseType<SavePhotoResponseDataType>>(`profile/photo`, formData, {\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data'\r\n            }\r\n        }).then(res => res.data)\r\n    },\r\n    saveProfile(profile: ProfileType) {\r\n        return instance.put<APIResponseType>(`profile`, profile).then(res => res.data)\r\n    }\r\n}","import {FormAction, stopSubmit} from \"redux-form\";\r\nimport {profileAPI} from \"../api/Profile-api\";\r\nimport {ActionsTypesInfer, BaseThunkType} from \"./redux-store\";\r\n\r\n\r\ntype PostType = {\r\n    id: number\r\n    message: string\r\n    likesCount: number\r\n}\r\ntype ContactsType = {\r\n    github: string\r\n    vk: string\r\n    facebook: string\r\n    instagram: string\r\n    twitter: string\r\n    website: string\r\n    youtube: string\r\n    mainLink: string\r\n}\r\ntype PhotosType = {\r\n    small: string | null\r\n    large: string | null\r\n}\r\ntype ProfileType = {\r\n    userId: number\r\n    lookingForAJob: boolean\r\n    lookingForAJobDescription: string\r\n    fullName: string\r\n    contacts: ContactsType\r\n    photos: PhotosType\r\n    aboutMe: string\r\n}\r\n\r\n\r\nlet initialState = {\r\n    posts: [\r\n        {id: 1, message: 'Hi, how are you?', likesCount: 13},\r\n        {id: 2, message: 'It\\'s my first post', likesCount: 11},\r\n        {id: 3, message: 'Improve my skills', likesCount: 99},\r\n        {id: 4, message: 'Thank you', likesCount: 5}\r\n    ] as Array<PostType>,\r\n    profile: null as ProfileType | null,\r\n    status: \"\",\r\n};\r\n\r\n\r\n\r\nconst profileReducer = (state = initialState, action: ActionsType): InitialStateType => {\r\n\r\n    switch (action.type) {\r\n        case 'SN/PROFILE/ADD-POST': {\r\n            let newPost = {\r\n                id: 5,\r\n                message: action.newPostText,\r\n                likesCount: 0\r\n            };\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, newPost],\r\n            };\r\n        }\r\n        case 'SN/PROFILE/SET_STATUS': {\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            }\r\n        }\r\n        case 'SN/PROFILE/SET_USER_PROFILE': {\r\n            return {...state, profile: action.profile}\r\n        }\r\n\r\n        case 'SN/PROFILE/DELETE_POST':\r\n            return {...state, posts: state.posts.filter(p => p.id != action.postId)}\r\n\r\n        case 'SN/PROFILE/SAVE_PHOTO_SUCCESS':\r\n            return {...state, profile: {...state.profile, photos: action.photos } as ProfileType}\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const actions = {\r\n    addPostActionCreator: (newPostText: string) => ({type: 'SN/PROFILE/ADD-POST', newPostText}as const),\r\n    setUserProfile: (profile: ProfileType ) => ({type: 'SN/PROFILE/SET_USER_PROFILE', profile}as const),\r\n    setStatus:  (status: string) => ({type: 'SN/PROFILE/SET_STATUS', status}as const),\r\n    deletePost : (postId: number) => ({type: 'SN/PROFILE/DELETE_POST', postId}as const),\r\n    savePhotoSuccess : (photos: PhotosType) => ({type: 'SN/PROFILE/SAVE_PHOTO_SUCCESS', photos}as const)\r\n}\r\n\r\n\r\n\r\nexport const getUserProfile = (userId: number): ThunkType => async (dispatch) => {\r\n    const data = await profileAPI.getProfile(userId);\r\n    dispatch(actions.setUserProfile(data));\r\n}\r\n\r\nexport const getStatus = (userId: number): ThunkType => async (dispatch) => {\r\n    let data = await profileAPI.getStatus(userId);\r\n    dispatch(actions.setStatus(data));\r\n}\r\n\r\nexport const updateStatus = (status: string): ThunkType => async (dispatch) => {\r\n    try {\r\n        let data = await profileAPI.updateStatus(status);\r\n\r\n        if (data.resultCode === 0) {\r\n            dispatch(actions.setStatus(status));\r\n        }\r\n    } catch (error){\r\n\r\n    }\r\n}\r\nexport const savePhoto = (file: File): ThunkType => async (dispatch) => {\r\n    let data = await profileAPI.savePhoto(file);\r\n\r\n    if (data.resultCode === 0) {\r\n        dispatch(actions.savePhotoSuccess(data.data.photos));\r\n    }\r\n}\r\n\r\nexport const saveProfile = (profile: ProfileType):ThunkType => async (dispatch, getState) => {\r\n    const userId = getState().auth.userId;\r\n    const data = await profileAPI.saveProfile(profile);\r\n    if (data.resultCode === 0) {\r\n        if (userId != null){\r\n            dispatch(getUserProfile(userId));\r\n        } else {\r\n            throw new Error(\"userId can't be null\")\r\n        }\r\n    } else {\r\n\r\n        dispatch(stopSubmit(\"edit-profile\", {_error: data.messages[0]}));\r\n        return Promise.reject(data.messages[0])\r\n    }\r\n\r\n}\r\n\r\nexport default profileReducer;\r\n\r\nexport type InitialStateType = typeof initialState\r\ntype ActionsType = ActionsTypesInfer<typeof actions>\r\ntype ThunkType = BaseThunkType<ActionsType | FormAction>","import {ActionsTypesInfer} from \"./redux-store\";\r\n\r\n\r\ntype DialogType = {\r\n    id: number\r\n    name: string\r\n}\r\n\r\ntype MessageType = {\r\n    id: number\r\n    message: string\r\n}\r\n\r\nlet initialState = {\r\n    dialogs: [\r\n        {id: 1, name: 'Jove'},\r\n        {id: 2, name: 'Vic'},\r\n        {id: 3, name: 'Sv'},\r\n        {id: 4, name: 'Alex'},\r\n        {id: 5, name: 'Dandy'},\r\n        {id: 6, name: 'Mick'}\r\n    ] as Array<DialogType>,\r\n    messages: [\r\n        {id: 1, message: 'Hi'},\r\n        {id: 2, message: 'How is your it skills?'},\r\n        {id: 3, message: 'Yo'},\r\n        {id: 4, message: 'Nice to meet you'},\r\n        {id: 5, message: 'Thank you'}\r\n    ] as Array<MessageType>\r\n};\r\n\r\nexport type InitialStateType = typeof initialState\r\ntype ActionType = ActionsTypesInfer<typeof actions>\r\n\r\nexport const actions = {\r\n    sendMessage : (newMessageBody: string) => ({type: 'SN/DIALOGS/SEND_MESSAGE', newMessageBody} as const)\r\n}\r\n\r\nconst dialogsReducer = (state = initialState, action: ActionType) => {\r\n    switch (action.type) {\r\n        case 'SN/DIALOGS/SEND_MESSAGE':\r\n            let body = action.newMessageBody;\r\n            return {\r\n                ...state,\r\n                messages: [...state.messages, {id: 6, message: body}]\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport default dialogsReducer;","module.exports = __webpack_public_path__ + \"static/media/user.8b1dbb1f.png\";","module.exports = __webpack_public_path__ + \"static/media/preloader.6e7c9db7.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userPhoto\":\"users_userPhoto__2Q8mV\",\"selectedPage\":\"users_selectedPage__1uDnL\"};","import axios from \"axios\";\r\nimport {UserType} from \"../types/types\";\r\n\r\n\r\nexport const instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    headers:     {\r\n        \"API-KEY\": \"5b81d964-99b4-407f-90c1-60763e8e54a8\"\r\n    }\r\n});\r\n\r\n\r\nexport enum ResultCodesEnum {\r\n    Success = 0,\r\n    Error = 1,\r\n}\r\n\r\nexport enum ResultCodesEnumForCaptcha {\r\n    CaptchaIsRequired = 10\r\n}\r\n\r\nexport type GetItemsType = {\r\n    items: Array<UserType>\r\n    totalCount: number,\r\n    error: string | null\r\n}\r\n\r\nexport type APIResponseType <D ={}, RC = ResultCodesEnum> = {\r\n    data: D\r\n    messages: Array<string>\r\n    resultCode: RC\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import {APIResponseType, instance, ResultCodesEnum, ResultCodesEnumForCaptcha} from \"./api\";\r\n\r\n\r\ntype MeResponseDataType = {\r\n        id: number\r\n        email: string\r\n        login: string\r\n}\r\ntype LoginResponseDataType = {\r\n        userId: number\r\n}\r\n\r\nexport const authAPI = {\r\n    me() {\r\n        return instance.get<APIResponseType<MeResponseDataType>>(`auth/me`).then(res => res.data);\r\n    },\r\n    login(email: string, password: string, rememberMe = false, captcha: null | string = null) {\r\n        return instance.post<APIResponseType<LoginResponseDataType, ResultCodesEnum | ResultCodesEnumForCaptcha>>(`auth/login`, {\r\n            email,\r\n            password,\r\n            rememberMe,\r\n            captcha\r\n        }).then(res => res.data);\r\n    },\r\n    logout() {\r\n        return instance.delete(`auth/login`);\r\n    }\r\n}","import {instance} from \"./api\";\r\n\r\ntype GetCaptchaUrlResponseType = {\r\n    url: string\r\n}\r\n\r\nexport const securityAPI = {\r\n    getCaptchaUrl() {\r\n        return instance.get<GetCaptchaUrlResponseType>(`security/get-captcha-url`).then(res => res.data)\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import {FormAction, stopSubmit, StopSubmitAction} from \"redux-form\";\r\nimport {ResultCodesEnum, ResultCodesEnumForCaptcha} from \"../api/api\";\r\nimport {authAPI} from \"../api/Auth-api\";\r\nimport {securityAPI} from \"../api/Security-api\";\r\nimport {ActionsTypesInfer, BaseThunkType} from \"./redux-store\";\r\n\r\n\r\nlet initialState = {\r\n    userId: null as number | null,\r\n    email: null as string | null,\r\n    login: null as string | null,\r\n    isAuth: false,\r\n    captchaUrl: null as string | null,\r\n};\r\n\r\nexport type InitialStateType = typeof initialState\r\ntype ActionType = ActionsTypesInfer<typeof actions>\r\ntype ThunkType = BaseThunkType<ActionType | FormAction>\r\n\r\nconst authReducer = (state = initialState, action: ActionType): InitialStateType => {\r\n    switch (action.type) {\r\n        case 'SN/auth/SET_USER_DATA':\r\n        case 'SN/auth/GET_CAPTCHA_URL_SUCCESS':\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const actions = {\r\n    setAuthUserData: (userId: number | null, email: string | null, login: string | null, isAuth: boolean) =>\r\n        ({type: 'SN/auth/SET_USER_DATA', payload: {userId, email, login, isAuth}} as const),\r\n    getCaptchaUrlSuccess: (captchaUrl: string) => ({\r\n        type: 'SN/auth/GET_CAPTCHA_URL_SUCCESS', payload: {captchaUrl}\r\n    } as const),\r\n\r\n}\r\n\r\n\r\n\r\nexport const getAuthUserData = (): ThunkType => async (dispatch) => {\r\n    let meData = await authAPI.me();\r\n\r\n\r\n    if (meData.resultCode === ResultCodesEnum.Success) {\r\n        let {id, login, email} = meData.data;\r\n        dispatch(actions.setAuthUserData(id, email, login, true));\r\n    }\r\n}\r\n\r\n\r\nexport const login = (email: string, password: string, rememberMe: boolean, captcha: string): ThunkType => async (dispatch) => {\r\n    let data = await authAPI.login(email, password, rememberMe, captcha);\r\n    if (data.resultCode === ResultCodesEnum.Success) {\r\n        dispatch(getAuthUserData())\r\n    } else {\r\n        if (data.resultCode === ResultCodesEnumForCaptcha.CaptchaIsRequired) {\r\n            dispatch(getCaptchaUrl());\r\n        }\r\n        let message = data.messages.length > 0 ? data.messages[0] : \"Some error\";\r\n        dispatch(stopSubmit(\"login\", {_error: message}));\r\n    }\r\n}\r\n\r\nexport const getCaptchaUrl = (): ThunkType => async (dispatch) => {\r\n    const data = await securityAPI.getCaptchaUrl();\r\n    const captchaUrl = data.url;\r\n\r\n    dispatch(actions.getCaptchaUrlSuccess(captchaUrl));\r\n}\r\n\r\n\r\nexport const logout = (): ThunkType => async (dispatch: any) => {\r\n    let response = await authAPI.logout();\r\n\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(actions.setAuthUserData(null, null, null, false));\r\n    }\r\n}\r\n\r\nexport default authReducer;","\r\nimport {getAuthUserData} from \"./auth-reducer\";\r\nimport {ActionsTypesInfer} from \"./redux-store\";\r\n\r\n\r\nlet initialState = {\r\n    initialized: false\r\n};\r\n\r\ntype ActionType = ActionsTypesInfer<typeof actions>\r\n\r\nexport type InitialStateType = typeof initialState\r\n\r\nexport const appReducer = (state = initialState, action: ActionType): InitialStateType => {\r\n    switch (action.type) {\r\n        case 'SN/APP/INITIALIZED_SUCCESS':\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nconst actions = {\r\n    initializedSuccess: () => ({type: 'SN/APP/INITIALIZED_SUCCESS'} as const)\r\n}\r\n\r\n\r\nexport const initializeApp = () => (dispatch: any) => {\r\n    let promise = dispatch(getAuthUserData());\r\n    Promise.all([promise])\r\n        .then(() => {\r\n        dispatch(actions.initializedSuccess());\r\n    });\r\n}\r\n\r\n","let initialState = {};\r\ntype InitialStateType = typeof initialState\r\nconst sidebarReducer = (state = initialState, action: any) => {\r\n    return state;\r\n}\r\n\r\nexport default sidebarReducer;","\r\nexport const updateObjectInArray = (items: any, itemId: any, objPropName: any, newObjProps: any) => {\r\n    return items.map((u: any) => {\r\n        if (u[objPropName] === itemId) {\r\n            return {...u, ...newObjProps}\r\n        }\r\n        return u;\r\n    })\r\n}","import {APIResponseType, GetItemsType, instance} from \"./api\";\r\nimport {AxiosPromise} from \"axios\";\r\n\r\nexport const usersAPI = {\r\n    getUsers(currentPage = 1, pageSize = 10, term: string, friend: null | boolean = null) {\r\n        return instance.get<GetItemsType>(`users?page=${currentPage}&count=${pageSize}&term=${term}` + (friend === null ? '' : `&friend=${friend}`))\r\n            .then(res =>res.data)\r\n     },\r\n    follow(userId: number) {\r\n        return instance.post<APIResponseType>(`follow/${userId}`).then(res => res.data)\r\n    },\r\n    unfollow(userId: number) {\r\n        return instance.delete(`follow/${userId}`).then(res => res.data) as Promise<APIResponseType>\r\n    }\r\n}","import {updateObjectInArray} from \"../utils/object-helpers\";\r\nimport {PhotosType, UserType} from \"../types/types\";\r\nimport {ActionsTypesInfer, AppStateType, BaseThunkType} from \"./redux-store\";\r\nimport {Action, Dispatch} from \"redux\";\r\nimport {ThunkAction} from \"redux-thunk\";\r\nimport {usersAPI} from \"../api/Users-api\";\r\nimport {APIResponseType} from \"../api/api\";\r\n\r\n\r\n\r\nlet initialState = {\r\n    users: [] as Array<UserType>,\r\n    pageSize: 10,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: true,\r\n    followingInProgress: [] as Array<number>, // Array of users Id\r\n    filter: {\r\n        term: \"\",\r\n        friend: null as null | boolean\r\n    }\r\n};\r\n\r\n\r\nconst usersReducer = (state = initialState, action: ActionsTypes): InititalState => {\r\n    switch (action.type) {\r\n        case 'SN/USERS/FOLLOW':\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, \"id\", {followed: true})\r\n            }\r\n        case 'SN/USERS/UNFOLLOW':\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, \"id\", {followed: false})\r\n            }\r\n        case \"SN/USERS/SET_FILTER\":{\r\n            return {...state, filter: action.payload}\r\n        }\r\n        case 'SN/USERS/SET_USERS': {\r\n            return {...state, users: action.users}\r\n        }\r\n        case 'SN/USERS/SET_CURRENT_PAGE': {\r\n            return {...state, currentPage: action.currentPage}\r\n        }\r\n        case 'SN/USERS/SET_TOTAL_USERS_COUNT': {\r\n            return {...state, totalUsersCount: action.count}\r\n        }\r\n        case 'SN/USERS/TOGGLE_IS_FETCHING': {\r\n            return {...state, isFetching: action.isFetching}\r\n        }\r\n        case 'SN/USERS/TOGGLE_IS_FOLLOWING_PROGRESS': {\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.isFetching\r\n                    ? [...state.followingInProgress, action.userId]\r\n                    : state.followingInProgress.filter(id => id != action.userId)\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport const Actions = {\r\n    followSuccess: (userId: number) => ({type: 'SN/USERS/FOLLOW', userId} as const),\r\n    unfollowSuccess: (userId: number) => ({type: 'SN/USERS/UNFOLLOW', userId} as const),\r\n    setFilter: (filter: FilterType) => ({type: 'SN/USERS/SET_FILTER', payload: filter} as const),\r\n    setUsers: (users: Array<UserType>) => ({type: 'SN/USERS/SET_USERS', users} as const),\r\n    setCurrentPage: (currentPage: number) => ({type: 'SN/USERS/SET_CURRENT_PAGE', currentPage} as const),\r\n    setTotalUsersCount: (totalUsersCount: number) => ({\r\n        type: 'SN/USERS/SET_TOTAL_USERS_COUNT',\r\n        count: totalUsersCount\r\n    } as const),\r\n    toggleIsFetching: (isFetching: boolean) => ({type: 'SN/USERS/TOGGLE_IS_FETCHING', isFetching} as const),\r\n    toggleFollowingProgress: (isFetching: boolean, userId: number) => ({\r\n        type: 'SN/USERS/TOGGLE_IS_FOLLOWING_PROGRESS',\r\n        isFetching,\r\n        userId\r\n    } as const)\r\n}\r\n\r\n\r\nexport const requestUsers = (page: number, pageSize: number, filter: FilterType): ThunkType => {\r\n    return async (dispatch) => {\r\n        dispatch(Actions.toggleIsFetching(true));\r\n        dispatch(Actions.setCurrentPage(page));\r\n        dispatch(Actions.setFilter(filter));\r\n\r\n\r\n        let data = await usersAPI.getUsers(page, pageSize, filter.term, filter.friend);\r\n        dispatch(Actions.toggleIsFetching(false));\r\n        dispatch(Actions.setUsers(data.items));\r\n        dispatch(Actions.setTotalUsersCount(data.totalCount));\r\n    }\r\n}\r\n\r\nconst _followUnfollowFlow = async (dispatch: Dispatch<ActionsTypes>, userId: number,\r\n                                   apiMethod: (userId: number) => Promise<APIResponseType>, actionCreator: (userId: number) => ActionsTypes) => {\r\n    dispatch(Actions.toggleFollowingProgress(true, userId));\r\n    let response = await apiMethod(userId);\r\n\r\n    if (response.resultCode == 0) {\r\n        dispatch(actionCreator(userId));\r\n    }\r\n    dispatch(Actions.toggleFollowingProgress(false, userId));\r\n}\r\n\r\nexport const follow = (userId: number): ThunkType => {\r\n    return async (dispatch) => {\r\n      await  _followUnfollowFlow(dispatch, userId, usersAPI.follow.bind(usersAPI), Actions.followSuccess);\r\n    }\r\n}\r\nexport const unfollow = (userId: number): ThunkType => {\r\n    return async (dispatch) => {\r\n      await _followUnfollowFlow(dispatch, userId, usersAPI.unfollow.bind(usersAPI), Actions.unfollowSuccess);\r\n    }\r\n}\r\n\r\nexport default usersReducer;\r\n\r\n\r\nexport type InititalState = typeof initialState\r\nexport type FilterType = typeof initialState.filter\r\ntype ActionsTypes = ActionsTypesInfer<typeof Actions>;\r\ntype ThunkType = BaseThunkType<ActionsTypes>","import {applyMiddleware, combineReducers, compose, createStore} from \"redux\";\r\nimport profileReducer from \"./profile-reducer\";\r\nimport dialogsReducer from \"./dialogs-reducer\";\r\nimport sidebarReducer from \"./sidebar-reducer\";\r\nimport usersReducer from \"./users-reducer\";\r\nimport authReducer from \"./auth-reducer\";\r\nimport thunkMiddleware, {ThunkAction} from \"redux-thunk\";\r\nimport {reducer as FormReducer} from 'redux-form'\r\nimport {appReducer} from \"./app-reducer\";\r\nimport { Action } from \"redux\";\r\n\r\nlet rootReducer = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    sidebar: sidebarReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    form: FormReducer,\r\n    app: appReducer\r\n});\r\n\r\ntype RootReducerType = typeof rootReducer\r\nexport type AppStateType = ReturnType<RootReducerType>\r\n\r\nexport type ActionsTypesInfer<T> = T extends {[keys: string]: (...args: any[]) => infer U} ? U : never\r\n\r\nexport type BaseThunkType<A extends Action, R = Promise<void>> = ThunkAction<R, AppStateType, unknown, A>\r\n\r\n// @ts-ignore\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunkMiddleware)));\r\n\r\n\r\n// @ts-ignore\r\nwindow.__store__ = store;\r\n\r\n\r\nexport default store;","import React from \"react\";\r\nimport Preloader from \"../components/common/Preloader/Preloader\";\r\n\r\n\r\nexport function withSuspense<WCP>(WrappedComponent: React.ComponentType<WCP>) {\r\n    return (props: WCP) => {\r\n        return <React.Suspense fallback={<Preloader />} >\r\n            <WrappedComponent {...props} />\r\n        </React.Suspense>\r\n    };\r\n}","import {createSelector} from \"reselect\";\r\nimport {AppStateType} from \"./redux-store\";\r\nimport App from \"../App\";\r\n\r\nconst getUsersSelector = (state : AppStateType) => {\r\n    return state.usersPage.users;\r\n}\r\n\r\nexport const getUsers = createSelector(getUsersSelector,\r\n    (users) => {\r\n\r\n   return users.filter(u => true);\r\n})\r\n\r\nexport const getPageSize = (state: AppStateType) => {\r\n    return state.usersPage.pageSize;\r\n}\r\n\r\nexport const getTotalUsersCount = (state: AppStateType) => {\r\n    return state.usersPage.totalUsersCount;\r\n}\r\n\r\n\r\nexport const getCurrentPage = (state: AppStateType) => {\r\n    return state.usersPage.currentPage;\r\n}\r\n\r\n\r\nexport const getIsFetching = (state: AppStateType) => {\r\n    return state.usersPage.isFetching;\r\n}\r\n\r\n\r\nexport const getFollowingInProgress = (state: AppStateType) => {\r\n    return state.usersPage.followingInProgress;\r\n}\r\n\r\n\r\nexport const getUsersFilter = (state: AppStateType) => {\r\n    return state.usersPage.filter;\r\n}","import React, {useState} from 'react';\r\nimport styles from \"./Paginator.module.css\";\r\nimport cn from \"classnames\";\r\n\r\ntype PropsType = {\r\n    totalItemsCount: number\r\n    pageSize: number\r\n    currentPage?: number\r\n    onPageChanged?: (pageNumber: number) => void\r\n    portionSize?: number\r\n}\r\n\r\n\r\nlet Paginator: React.FC<PropsType> = ({totalItemsCount, pageSize, currentPage = 1, onPageChanged = x => x, portionSize = 10}) => {\r\n\r\n    let pagesCount = Math.ceil(totalItemsCount / pageSize);\r\n\r\n    let pages = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i);\r\n    }\r\n\r\n    let portionCount = Math.ceil(pagesCount / portionSize);\r\n    let [portionNumber, setPortionNumber] = useState(1);\r\n    let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\r\n    let rightPortionPageNumber = portionNumber * portionSize;\r\n\r\n\r\n    return <div className={styles.paginator}>\r\n        { portionNumber > 1 &&\r\n        <button onClick={() => { setPortionNumber(portionNumber - 1) }}>PREV</button> }\r\n\r\n        {pages\r\n            .filter(p => p >= leftPortionPageNumber && p<=rightPortionPageNumber)\r\n            .map((p) => {\r\n                return <span className={ cn({\r\n                    [styles.selectedPage]: currentPage === p\r\n                }, styles.pageNumber) }\r\n                             key={p}\r\n                             onClick={(e) => {\r\n                                 onPageChanged(p);\r\n                             }}>{p}</span>\r\n            })}\r\n        { portionCount > portionNumber &&\r\n        <button onClick={() => { setPortionNumber(portionNumber + 1) }}>NEXT</button> }\r\n\r\n\r\n    </div>\r\n}\r\n\r\nexport default Paginator;","import React from 'react';\r\nimport styles from \"./users.module.css\";\r\nimport userPhoto from \"../../assets/images/user.png\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {UserType} from \"../../types/types\";\r\n\r\n\r\ntype PropsType = {\r\n    user: UserType\r\n    followingInProgress: Array<number>\r\n    unfollow: (userId : number) => void\r\n    follow: (userId : number) => void\r\n}\r\n\r\n\r\nlet User: React.FC<PropsType> = ({user, followingInProgress, unfollow, follow}) => {\r\n    return (\r\n        <div>\r\n                <span>\r\n                    <div>\r\n                       <NavLink to={'/profile/' + user.id}>\r\n                        <img src={user.photos.small != null ? user.photos.small : userPhoto}\r\n                             className={styles.userPhoto}/>\r\n                       </NavLink>\r\n                    </div>\r\n                    <div>\r\n                        {user.followed\r\n                            ? <button disabled={followingInProgress\r\n                                .some(id => id === user.id)}\r\n                                      onClick={() => { unfollow(user.id) }}>\r\n                                Unfollow</button>\r\n                            : <button disabled={followingInProgress.some(id => id === user.id)}\r\n                                      onClick={() => { follow(user.id) }}>\r\n                                Follow</button>}\r\n\r\n                    </div>\r\n                </span>\r\n            <span>\r\n                    <span>\r\n                        <div>{user.name}</div>\r\n                        <div>{user.status}</div>\r\n                    </span>\r\n                    <span>\r\n                        <div>{\"user.location.country\"}</div>\r\n                        <div>{\"user.location.city\"}</div>\r\n                    </span>\r\n                </span>\r\n        </div>)\r\n}\r\n\r\nexport default User;","import {Field, Form, Formik} from \"formik\";\r\nimport React from \"react\";\r\nimport {FilterType} from \"../../redux/users-reducer\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {getUsersFilter} from \"../../redux/users-selectors\";\r\n\r\nconst userSearchFormValidate = (values: any) => {\r\n    const errors = {}\r\n    return errors\r\n}\r\n\r\ntype FriendFormType = \"true\" | \"false\" | \"null\"\r\n\r\n\r\ntype FormType = {\r\n    term: string\r\n    friend: FriendFormType\r\n}\r\n\r\ntype PropsType = {\r\n    onFilterChanged: (filter: FilterType) => void\r\n}\r\n\r\n\r\n\r\nexport const UsersSearchForm: React.FC<PropsType> = React.memo((props) => {\r\n\r\n    const filter = useSelector(getUsersFilter)\r\n\r\n    const submit = (values: FormType, {setSubmitting}: {setSubmitting: (isSubmitting: boolean) => void} ) => {\r\n       const filter: FilterType = {\r\n           term: values.term,\r\n           friend: values.friend === \"null\" ?  null : values.friend === \"true\" ? true : false\r\n       }\r\n        props.onFilterChanged(filter);\r\n        setSubmitting(false);\r\n    };\r\n\r\n    return <div>\r\n        <Formik\r\n            enableReinitialize\r\n            initialValues={{ term: filter.term , friend: String(filter.friend) as FriendFormType}}\r\n            validate={userSearchFormValidate}\r\n            onSubmit={submit}\r\n        >\r\n            {({ isSubmitting }) => (\r\n                <Form>\r\n                    <Field type=\"text\" name=\"term\" />\r\n                    <Field name=\"friend\" as=\"select\" placeholder=\"Favorite Color\">\r\n                        <option value=\"null\">All</option>\r\n                        <option value=\"true\">Only followed</option>\r\n                        <option value=\"false\">Only unfollowed</option>\r\n                    </Field>\r\n                    <button type=\"submit\" disabled={isSubmitting}>\r\n                        Find\r\n                    </button>\r\n                </Form>\r\n            )}\r\n        </Formik>\r\n    </div>\r\n})","import React, {useEffect} from 'react';\r\nimport Paginator from \"../common/Paginator/Paginator\";\r\nimport User from \"./User\";\r\nimport {UserType} from \"../../types/types\";\r\nimport {Form, Formik, Field} from 'formik';\r\nimport {UsersSearchForm} from \"./SearchFormForUsers\";\r\nimport {FilterType, follow, requestUsers, unfollow} from \"../../redux/users-reducer\";\r\nimport {\r\n    getCurrentPage,\r\n    getFollowingInProgress,\r\n    getPageSize,\r\n    getTotalUsersCount,\r\n    getUsers,\r\n    getUsersFilter\r\n} from \"../../redux/users-selectors\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport { useHistory } from 'react-router-dom';\r\nimport * as queryString from \"querystring\";\r\n\r\n\r\n\r\ntype PropsType = {}\r\n\r\ntype QueryParamsType = { term?: string, page?: string, friend?: string };\r\nexport const Users: React.FC<PropsType> = (props) => {\r\n\r\n    const users = useSelector(getUsers)\r\n    const totalUsersCount = useSelector(getTotalUsersCount)\r\n    const currentPage = useSelector(getCurrentPage)\r\n    const pageSize = useSelector(getPageSize)\r\n    const filter = useSelector(getUsersFilter)\r\n    const followingInProgress = useSelector(getFollowingInProgress)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const history = useHistory()\r\n\r\n\r\n    useEffect(() => {\r\n            const parsed = queryString.parse(history.location.search.substr(1)) as QueryParamsType\r\n\r\n        let actualPage = currentPage\r\n        let actualFilter = filter\r\n        if (!!parsed.page) actualPage = Number(parsed.page)\r\n        if (!!parsed.term) actualFilter = {...actualFilter, term: parsed.term as string}\r\n        switch (parsed.friend) {\r\n            case \"null\":\r\n                actualFilter = {...actualFilter, friend: null}\r\n                break;\r\n            case \"true\":\r\n                actualFilter = {...actualFilter, friend: true}\r\n                break;\r\n            case \"false\":\r\n                actualFilter = {...actualFilter, friend: false}\r\n                break;\r\n        }\r\n\r\n        dispatch(requestUsers(actualPage, pageSize, actualFilter))\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        const query: QueryParamsType = {}\r\n        if(!!filter.term) query.term = filter.term\r\n        if(!!filter.friend !== null) query.friend = String(filter.term)\r\n        if(currentPage !== 1) query.page = String(currentPage)\r\n\r\n\r\n\r\n        history.push({\r\n            pathname: \"/developers\",\r\n            search: queryString.stringify(query)\r\n        })\r\n\r\n    }, [filter, currentPage])\r\n\r\n    const onPageChanged = (pageNumber: number) => {\r\n        dispatch(requestUsers(pageNumber, pageSize, filter))\r\n    }\r\n    const onFilterChanged = (filter: FilterType) => {\r\n        dispatch(requestUsers(1, pageSize, filter))\r\n    }\r\n    const folloW = (userId: number) => {\r\n        dispatch(follow(userId));\r\n    }\r\n    const unfolloW = (userId: number) => {\r\n        dispatch(unfollow(userId));\r\n    }\r\n\r\n    return <div>\r\n\r\n        <UsersSearchForm onFilterChanged={onFilterChanged}/>\r\n\r\n        <Paginator currentPage={currentPage} onPageChanged={onPageChanged}\r\n                   totalItemsCount={totalUsersCount} pageSize={pageSize}/>\r\n        <div>\r\n            {\r\n                users.map(u => <User user={u}\r\n                                     followingInProgress={followingInProgress}\r\n                                     key={u.id}\r\n                                     unfollow={unfolloW}\r\n                                     follow={folloW}\r\n                    />\r\n                )\r\n            }\r\n        </div>\r\n    </div>\r\n}\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport {useSelector} from 'react-redux';\r\nimport {FilterType} from '../../redux/users-reducer';\r\nimport Preloader from \"../common/Preloader/Preloader\";\r\nimport {getIsFetching} from \"../../redux/users-selectors\";\r\nimport {UserType} from \"../../types/types\";\r\nimport {Users} from \"./Users\";\r\n\r\n\r\n\r\n\r\n\r\ntype UsersPagePropsType = {\r\n    pageTitle: string\r\n}\r\n\r\n\r\nexport const UsersPage: React.FC<UsersPagePropsType> = (props) => {\r\n\r\n\r\n    const isFetching = useSelector(getIsFetching)\r\n\r\n    return <>\r\n        <h2>{props.pageTitle}</h2>\r\n        {isFetching ? <Preloader/> : null}\r\n        <Users />\r\n    </>\r\n}\r\n\r\n\r\n","import React from 'react';\r\nimport {Field, InjectedFormProps, reduxForm} from \"redux-form\";\r\nimport {createField, GetStringKeys, Input} from \"../common/FormsControls/FormsControls\";\r\nimport {required} from \"../../utils/validators/validators\";\r\nimport {connect, useDispatch, useSelector} from \"react-redux\";\r\nimport {login} from \"../../redux/auth-reducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport style from \"./../common/FormsControls/FormsControls.module.css\";\r\nimport {AppStateType} from \"../../redux/redux-store\";\r\nimport {Button} from \"antd\";\r\n\r\ntype LoginFormOwnValues = {\r\n  captchaUrl : string | null\r\n}\r\n\r\nconst LoginForm: React.FC<InjectedFormProps<LoginFormValuesType, LoginFormOwnValues> & LoginFormOwnValues> = ({handleSubmit, error, captchaUrl}) => {\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            {createField<LoginFormValuesTypeKeys>(\"Email\", \"email\", [required], Input)}\r\n            {createField<LoginFormValuesTypeKeys>(\"Password\", \"password\", [required], Input, {type: \"password\"})}\r\n            {createField<LoginFormValuesTypeKeys>(undefined, \"rememberMe\", [], Input, {type: \"checkbox\"}, \"remember me\")}\r\n\r\n            {captchaUrl && <img src={captchaUrl}/>}\r\n            {captchaUrl && createField<LoginFormValuesTypeKeys>(\"Symbols from image\", \"captcha\", [required], Input, {})}\r\n\r\n\r\n            {error && <div className={style.formSummaryError}>\r\n                {error}\r\n            </div>\r\n            }\r\n            <div>\r\n                <button>Login</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\n\r\nconst LoginReduxForm = reduxForm<LoginFormValuesType, LoginFormOwnValues>({form: 'login'})(LoginForm)\r\n\r\n\r\n\r\ntype LoginFormValuesType = {\r\n    captcha: string\r\n    rememberMe: boolean\r\n    email: string\r\n    password: string\r\n\r\n}\r\n\r\ntype LoginFormValuesTypeKeys = GetStringKeys<LoginFormValuesType>\r\n\r\nexport const LoginPage: React.FC = () => {\r\n    const captchaUrl = useSelector( (state: AppStateType) => state.auth.captchaUrl)\r\n    const isAuth = useSelector((state: AppStateType) => state.auth.isAuth)\r\n    const dispatch = useDispatch()\r\n\r\n\r\n    const onSubmit = (formData: LoginFormValuesType) => {\r\n        dispatch(login(formData.email, formData.password, formData.rememberMe, formData.captcha))\r\n    }\r\n\r\n    if (isAuth) {\r\n        return <Redirect to={\"/profile\"}/>\r\n    }\r\n\r\n    return <div>\r\n        <h1 className={style.testAccount}>Testing account: free@samuraijs.com </h1>\r\n        <h1 className={style.testAccount}>Password: free </h1>\r\n        <h1 className={style.testAccount}></h1>\r\n        <h1>Login</h1>\r\n        <LoginReduxForm onSubmit={onSubmit} captchaUrl={captchaUrl}/>\r\n        <h1 className={style.testAccount}>My Github repository: https://github.com/MethodFirst/SN </h1>\r\n    </div>\r\n}\r\n\r\n","import {createSelector} from \"reselect\";\r\nimport {AppStateType} from \"./redux-store\";\r\nimport App from \"../App\";\r\n\r\nexport const selectIsAuth = (state : AppStateType) => {\r\n    return state.auth.isAuth;\r\n}\r\n\r\nexport const selectCurrentUserLogin = (state : AppStateType) => {\r\n    return state.auth.login\r\n}\r\n\r\n","import React from 'react';\r\nimport s from './Header.module.css';\r\nimport {Link, NavLink, Redirect} from \"react-router-dom\";\r\nimport {Avatar, Button, Col, Layout, Menu, Row} from \"antd\";\r\nimport {UserOutlined} from \"@ant-design/icons\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {selectCurrentUserLogin, selectIsAuth} from \"../../redux/auth-selectors\";\r\nimport {logout} from \"../../redux/auth-reducer\";\r\nimport userPhoto from \"../../assets/images/user.png\";\r\n\r\n\r\nexport type MapPropsType = {}\r\n\r\n\r\nexport const Header: React.FC<MapPropsType> = (props) => {\r\n\r\n    const isAuth = useSelector(selectIsAuth)\r\n    const login = useSelector(selectCurrentUserLogin)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const logoutCallBack = () => {\r\n        dispatch(logout())\r\n    }\r\n\r\n\r\n    const {Header} = Layout;\r\n\r\n    return <Header className=\"header\">\r\n        <Row>\r\n            <Col span={18}> <Menu theme=\"dark\" mode=\"horizontal\" defaultSelectedKeys={['2']}>\r\n                <Menu.Item key=\"1\"><Link to=\"/developers\">Method</Link></Menu.Item>\r\n            </Menu>\r\n            </Col>\r\n\r\n            {isAuth\r\n                ? <>    <Col span={1}>\r\n                    <Avatar alt={login || ''} style={{backgroundColor: '#87d068'}} icon={<UserOutlined/>}/>\r\n                </Col>\r\n                <Col span={5}>\r\n                    <Button onClick={logoutCallBack}>Log out</Button>\r\n                </Col>\r\n                </>\r\n                : <Col span={6}>\r\n                    <Button>\r\n                        <Redirect to={\"/login\"}/>\r\n                    </Button>\r\n                </Col>}\r\n    </Row>\r\n</Header>\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React, {Component} from 'react';\r\nimport './App.css';\r\nimport 'antd/dist/antd.css';\r\nimport Navbar from './components/Navbar/Navbar';\r\nimport {BrowserRouter, HashRouter, Link, NavLink, Redirect, Route, Switch, withRouter} from \"react-router-dom\";\r\n\r\nimport {connect, Provider} from \"react-redux\";\r\nimport {compose} from \"redux\";\r\nimport {initializeApp} from \"./redux/app-reducer\";\r\nimport Preloader from \"./components/common/Preloader/Preloader\";\r\nimport store, {AppStateType} from \"./redux/redux-store\";\r\nimport {withSuspense} from \"./hoc/withSuspense\";\r\nimport {withAuthRedirect} from \"./hoc/withAuthRedirect\";\r\nimport s from \"./components/Header/Header.module.css\";\r\nimport st from \"./MainPage.module.css\"\r\nimport {UsersPage} from \"./components/Users/UsersContainer\";\r\nimport {LoginPage} from \"./components/Login/Login\";\r\nimport {Avatar, Button, Col, Row} from \"antd\";\r\n\r\nimport {Layout, Menu, Breadcrumb} from 'antd';\r\nimport {UserOutlined, LaptopOutlined, NotificationOutlined} from '@ant-design/icons';\r\nimport {Header} from \"./components/Header/Header\";\r\n\r\nconst {SubMenu} = Menu;\r\nconst {Content, Footer, Sider} = Layout;\r\n\r\n\r\nconst DialogsContainer = React.lazy(() => import('./components/Dialogs/DialogsContainer'));\r\nconst ProfileContainer = React.lazy(() => import('./components/Profile/ProfileContainer'));\r\n\r\n\r\ntype MapPropsType = ReturnType<typeof mapStateToProps>\r\ntype DispatchPropsType = {\r\n    initializeApp: () => void\r\n}\r\n\r\n\r\nconst SuspendedDialogs = withSuspense(DialogsContainer)\r\nconst SuspendedProfile = withSuspense(ProfileContainer)\r\n\r\nclass App extends Component<MapPropsType & DispatchPropsType> {\r\n    catchAllUnhandledErrors = (e: PromiseRejectionEvent) => {\r\n        alert(\"Some error occured\")\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        this.props.initializeApp();\r\n        window.addEventListener(\"unhandledrejection\", this.catchAllUnhandledErrors)\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener(\"unhandledrejection\", this.catchAllUnhandledErrors)\r\n    }\r\n\r\n    render() {\r\n        if (!this.props.initialized) {\r\n            return <Preloader/>\r\n        }\r\n\r\n\r\n        return (\r\n            <Layout>\r\n                <Header/>\r\n                <Content style={{padding: '0 50px'}}>\r\n                    <Breadcrumb style={{margin: '16px 0'}}>\r\n                        <Breadcrumb.Item>Home</Breadcrumb.Item>\r\n                        <Breadcrumb.Item>List</Breadcrumb.Item>\r\n                        <Breadcrumb.Item>App</Breadcrumb.Item>\r\n                    </Breadcrumb>\r\n                    <Layout className=\"site-layout-background\" style={{padding: '24px 0'}}>\r\n                        <Sider className=\"site-layout-background\" width={200}>\r\n                            <Menu\r\n                                mode=\"inline\"\r\n                                /* defaultSelectedKeys={['2']}*/\r\n                                /* defaultOpenKeys={['sub1']}*/\r\n                                style={{height: '100%'}}\r\n                            >\r\n\r\n                                <SubMenu key=\"sub1\" icon={<UserOutlined/>} title=\"My profile\">\r\n                                    <Menu.Item key=\"1\"><Link to=\"/profile\">Profile</Link></Menu.Item>\r\n                                    <Menu.Item key=\"2\"><Link to=\"/dialogs\">Messages</Link></Menu.Item>\r\n                                    {/*  <Menu.Item key=\"3\">option3</Menu.Item>\r\n                                    <Menu.Item key=\"4\">option4</Menu.Item>*/}\r\n                                </SubMenu>\r\n                                <SubMenu key=\"sub2\" icon={<LaptopOutlined/>} title=\"Users\">\r\n                                    <Menu.Item key=\"5\"> <Link to=\"/developers\">Developers</Link></Menu.Item>\r\n                                    {/*  <Menu.Item key=\"6\">option6</Menu.Item>\r\n                                    <Menu.Item key=\"7\">option7</Menu.Item>\r\n                                    <Menu.Item key=\"8\">option8</Menu.Item>*/}\r\n                                </SubMenu>\r\n                                {/* <SubMenu key=\"sub3\" icon={<NotificationOutlined/>} title=\"subnav 3\">\r\n                                    <Menu.Item key=\"9\">option9</Menu.Item>\r\n                                    <Menu.Item key=\"10\">option10</Menu.Item>\r\n                                    <Menu.Item key=\"11\">option11</Menu.Item>\r\n                                    <Menu.Item key=\"12\">option12</Menu.Item>\r\n                                </SubMenu>*/}\r\n                            </Menu>\r\n                        </Sider>\r\n                        <Content style={{padding: '0 24px', minHeight: 280}}>\r\n                            <Switch>\r\n                                <Route exact path='/'\r\n                                       render={() => <Redirect to={\"/profile\"}/>}/>\r\n\r\n                                <Route path='/dialogs'\r\n                                       render={() => <SuspendedDialogs/>}/>\r\n\r\n                                <Route path='/profile/:userId?'\r\n                                       render={() => <SuspendedProfile/>}/>\r\n\r\n                                <Route path='/developers'\r\n                                       render={() => <UsersPage pageTitle={\"All developers\"}/>}/>\r\n\r\n                                <Route path='/login'\r\n                                       render={() => <LoginPage/>}/>\r\n\r\n                                <Route path='*'\r\n                                       render={() => <div>404 NOT FOUND\r\n                                           <Button type={\"primary\"}>OK</Button>\r\n                                       </div>}/>\r\n                            </Switch>\r\n                        </Content>\r\n                    </Layout>\r\n                </Content>\r\n                <Footer style={{textAlign: 'center'}}>Method Social Network ©2021 Created by MethodFirst</Footer>\r\n            </Layout>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state: AppStateType) => ({\r\n    initialized: state.app.initialized\r\n})\r\n\r\nlet AppContainer = compose<React.ComponentType>(\r\n    withRouter,\r\n    connect(mapStateToProps, {initializeApp}))\r\n(App);\r\n\r\nconst SN: React.FC = () => {\r\n    return <HashRouter>\r\n        <Provider store={store}>\r\n            <AppContainer/>\r\n        </Provider>\r\n    </HashRouter>\r\n}\r\n\r\nexport default SN;\r\n","import * as serviceWorker from './serviceWorker';\r\nimport store from \"./redux/redux-store\";\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport {BrowserRouter} from \"react-router-dom\";\r\nimport {Provider} from \"react-redux\";\r\nimport SamuraiJSApp from \"./App\";\r\nimport {withAuthRedirect} from \"./hoc/withAuthRedirect\";\r\n\r\nReactDOM.render(<SamuraiJSApp/>, document.getElementById('root'));\r\n\r\n\r\n// API\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","import React from \"react\"\r\nimport styles from \"./FormsControls.module.css\"\r\nimport {FieldValidatorType} from \"../../../utils/validators/validators\"\r\nimport {Field, WrappedFieldProps} from \"redux-form\"\r\nimport {WrappedFieldMetaProps} from 'redux-form/lib/Field'\r\nimport {stringify} from \"querystring\";\r\n\r\ntype FormControlPropsType = {\r\n    meta: WrappedFieldMetaProps\r\n}\r\n\r\nconst FormControl: React.FC<FormControlPropsType> = ({meta: {touched, error}, children}) => {\r\n    const hasError = touched && error;\r\n    return (\r\n        <div className={styles.formControl + \" \" + (hasError ? styles.error : \"\")}>\r\n            <div>\r\n                {children}\r\n            </div>\r\n    {hasError && <span>{error}</span>}\r\n    </div>\r\n    )\r\n}\r\n\r\nexport const Textarea: React.FC<WrappedFieldProps> = (props) => {\r\n    //const {input, meta, child, ...restProps} = props;\r\n    const {input, meta, ...restProps} = props;\r\n    return <FormControl {...props}><textarea {...input} {...restProps} /></FormControl>\r\n}\r\n\r\nexport const Input: React.FC<WrappedFieldProps> = (props) => {\r\n    //const {input, meta, child, ...restProps} = props;\r\n    const {input, meta, ...restProps} = props;\r\n    return <FormControl {...props}><input {...input} {...restProps} /></FormControl>\r\n}\r\n\r\nexport function createField<FormKeysType extends string>(placeholder: string | undefined,\r\n                                                         name: FormKeysType,\r\n                                                         validators: Array<FieldValidatorType>,\r\n                                                         component: React.FC<WrappedFieldProps>,\r\n                                                         props = {}, text = \"\") {\r\n    return <div>\r\n        <Field placeholder={placeholder} name={name}\r\n    validate={validators}\r\n    component={component}\r\n    {...props}\r\n    /> {text}\r\n    </div>\r\n}\r\nexport type GetStringKeys<T> = Extract<keyof T, string>","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__1YzHu\",\"error\":\"FormsControls_error__1k1ug\",\"formSummaryError\":\"FormsControls_formSummaryError__3Hnvw\",\"testAccount\":\"FormsControls_testAccount__hmnZh\"};","import React from 'react';\r\nimport preloader from \"../../../assets/images/preloader.svg\";\r\n\r\ntype PropsType = {\r\n\r\n}\r\n\r\nlet Preloader: React.FC<PropsType> = (props) => {\r\n    return <div  style={ { backgroundColor: 'white' } }>\r\n        <img src={preloader} />\r\n    </div>\r\n}\r\n\r\nexport default Preloader;"],"sourceRoot":""}