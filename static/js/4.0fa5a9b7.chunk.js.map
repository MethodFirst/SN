{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Message/AddMessageForm.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","dialogs","dialogsItems","active","messages","message","DialogItem","props","path","id","react_default","a","createElement","className","s","dialog","NavLink","to","name","Message","maxLength50","maxLengthCreator","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","validate","required","placeholder","Dialogs","state","dialogsPage","dialogsElements","map","d","Dialogs_DialogItem_DialogItem","key","messagesElements","m","Dialogs_Message_Message","newMessageBody","isAuth","Message_AddMessageForm","values","sendMessage","Redirect","compose","connect","dispatch","sendMessageCreator","withAuthRedirect"],"mappings":"6EACAA,EAAAC,QAAA,CAAkBC,QAAA,yBAAAC,aAAA,8BAAAC,OAAA,wBAAAC,SAAA,0BAAAC,QAAA,0HCWHC,EARI,SAACC,GAChB,IAAIC,EAAO,YAAcD,EAAME,GAE/B,OAAOC,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAEC,OAAS,IAAMD,IAAEX,QACtCO,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAASC,GAAIT,GAAOD,EAAMW,QCDnBC,EAJC,SAACZ,GACb,OAAOG,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAEC,QAASR,EAAMF,oDCCtCe,EAAcC,YAAiB,IAetBC,cAAU,CAACC,KAAM,2BAAjBD,CAbQ,SAACf,GACpB,OACIG,EAAAC,EAAAC,cAAA,QAAMY,SAAUjB,EAAMkB,cAClBf,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACc,EAAA,EAAD,CAAOC,UAAWC,IAAUC,SAAU,CAACC,IAASV,GAAcW,YAAY,qBAAqBb,KAAK,oBAExGR,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,0BCwBDoB,EA9BC,SAACzB,GAEb,IAAI0B,EAAQ1B,EAAM2B,YAEdC,EAAkBF,EAAMhC,QAAQmC,IAAK,SAAAC,GAAC,OAAI3B,EAAAC,EAAAC,cAAC0B,EAAD,CAAYpB,KAAMmB,EAAEnB,KAAMqB,IAAKF,EAAE5B,GAAIA,GAAI4B,EAAE5B,OACrF+B,EAAmBP,EAAM7B,SAASgC,IAAK,SAAAK,GAAC,OAAI/B,EAAAC,EAAAC,cAAC8B,EAAD,CAASrC,QAASoC,EAAEpC,QAASkC,IAAKE,EAAEhC,OAC/DwB,EAAMU,eAQ3B,OAAKpC,EAAMqC,OAGPlC,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAEb,SACdS,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAEZ,cACZiC,GAENzB,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAEV,UACdM,EAAAC,EAAAC,cAAA,WAAO4B,GACP9B,EAAAC,EAAAC,cAACiC,EAAD,CAAgBrB,SAdR,SAACsB,GACjBvC,EAAMwC,YAAYD,EAAOH,qBAIHjC,EAAAC,EAAAC,cAACoC,EAAA,EAAD,CAAU/B,GAAI,mCCF7BgC,sBACXC,YAdkB,SAACjB,GACnB,MAAO,CACHC,YAAaD,EAAMC,cAGF,SAACiB,GACtB,MAAO,CACHJ,YAAa,SAACJ,GACVQ,EAASC,YAAmBT,QAOpCU,IAFWJ,CAGbjB","file":"static/js/4.0fa5a9b7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__2yvhM\",\"dialogsItems\":\"Dialogs_dialogsItems__1eIO1\",\"active\":\"Dialogs_active__2jYKT\",\"messages\":\"Dialogs_messages__3cD4p\",\"message\":\"Dialogs_message__3I8nx\"};","import React from 'react';\r\nimport s from './../Dialogs.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst DialogItem = (props) => {\r\n    let path = \"/dialogs/\" + props.id;\r\n\r\n    return <div className={s.dialog + ' ' + s.active}>\r\n        <NavLink to={path}>{props.name}</NavLink>\r\n    </div>\r\n}\r\n\r\nexport default DialogItem;","import React from 'react';\r\nimport s from './../Dialogs.module.css';\r\n\r\nconst Message = (props) => {\r\n    return <div className={s.dialog}>{props.message}</div>\r\n}\r\n\r\nexport default Message;","import React from \"react\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Textarea} from \"../../common/FormsControls/FormsControls\";\r\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\";\r\n\r\nconst maxLength50 = maxLengthCreator(50);\r\n\r\nconst AddMessageForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field component={Textarea} validate={[required,maxLength50]} placeholder=\"Enter your message\" name=\"newMessageBody\"/>\r\n            </div>\r\n            <div>\r\n                <button>Send</button>\r\n            </div>\r\n    </form>\r\n    )\r\n}\r\n\r\nexport default reduxForm({form: 'dialog-add-message-form'})(AddMessageForm);\r\n\r\n","import React from 'react';\r\nimport s from './Dialogs.module.css';\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport AddMessageForm from \"./Message/AddMessageForm\";\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    let state = props.dialogsPage;\r\n\r\n    let dialogsElements = state.dialogs.map( d => <DialogItem name={d.name} key={d.id} id={d.id} />  );\r\n    let messagesElements = state.messages.map( m => <Message message={m.message} key={m.id} /> );\r\n    let newMessageBody = state.newMessageBody;\r\n\r\n\r\n    let AddNewMessage = (values) => {\r\n        props.sendMessage(values.newMessageBody);\r\n    }\r\n\r\n\r\n    if (!props.isAuth) return <Redirect to={\"/login\"} /> ;\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsItems}>\r\n                { dialogsElements }\r\n            </div>\r\n            <div className={s.messages}>\r\n                <div>{ messagesElements }</div>\r\n                <AddMessageForm onSubmit={AddNewMessage} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Dialogs;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport {sendMessageCreator} from \"../../redux/dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        sendMessage: (newMessageBody) => {\r\n            dispatch(sendMessageCreator(newMessageBody));\r\n        },\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect\r\n)(Dialogs);"],"sourceRoot":""}