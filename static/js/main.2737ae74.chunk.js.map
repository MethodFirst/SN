{"version":3,"sources":["api/api.js","redux/dialogs-reducer.ts","assets/images/user.png","components/Users/users.module.css","assets/images/preloader.svg","components/Navbar/Navbar.module.css","components/common/FormsControls/FormsControls.js","components/common/FormsControls/FormsControls.module.css","serviceWorker.js","redux/sidebar-reducer.ts","utils/object-helpers.js","redux/users-reducer.ts","redux/auth-reducer.ts","redux/app-reducer.ts","redux/redux-store.js","components/Navbar/Navbar.jsx","components/common/Paginator/Paginator.jsx","components/Users/User.jsx","components/Users/Users.jsx","redux/users-selectors.js","components/Users/UsersContainer.jsx","components/Header/Header.jsx","components/Header/HeaderContainer.jsx","components/Login/Login.jsx","hoc/withSuspense.js","App.js","index.js","components/common/Preloader/Preloader.js","components/Header/Header.module.css","utils/validators/validators.js","components/common/Paginator/Paginator.module.css","hoc/withAuthRedirect.js","MainPage.module.css","redux/profile-reducer.ts"],"names":["__webpack_require__","d","__webpack_exports__","usersAPI","profileAPI","authAPI","securityAPI","axios__WEBPACK_IMPORTED_MODULE_0__","instance","axios","withCredentials","baseURL","headers","API-KEY","getUsers","currentPage","arguments","length","undefined","pageSize","get","concat","then","response","data","follow","userId","post","unfollow","delete","getProfile","console","warn","getStatus","updateStatus","status","put","savePhoto","photoFile","formData","FormData","append","Content-Type","saveProfile","profile","me","login","email","password","rememberMe","captcha","logout","getCaptchaUrl","initialState","dialogs","id","name","messages","message","sendMessageCreator","newMessageBody","type","dialogsReducer","state","action","body","Object","C_SN_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_1__","C_SN_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","module","exports","p","userPhoto","selectedPage","nav","item","activeLink","FormControl","_ref","input","_ref$meta","meta","touched","error","children","hasError","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","className","styles","Textarea","props","restProps","child","C_SN_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","assign","Input","createField","placeholder","validators","component","text","redux_form__WEBPACK_IMPORTED_MODULE_3__","validate","formSummaryError","testAccount","Boolean","window","location","hostname","match","sidebarReducer","updateObjectInArray","items","itemId","objPropName","newObjProps","map","u","objectSpread2","users","totalUsersCount","isFetching","followingInProgress","followSuccess","unfollowSuccess","setCurrentPage","toggleIsFetching","toggleFollowingProgress","followUnfollowFlow","_ref2","asyncToGenerator","regenerator_default","mark","_callee2","dispatch","apiMethod","actionCreator","wrap","_context2","prev","next","sent","resultCode","stop","_x2","_x3","_x4","_x5","apply","this","usersReducer","followed","count","toConsumableArray","filter","isAuth","captchaUrl","setAuthUserData","payload","getCaptchaUrlSuccess","getAuthUserData","_callee","_response$data$data","_login","_context","_x","_ref3","_callee3","_context3","url","authReducer","initialized","reducers","combineReducers","profilePage","profileReducer","dialogsPage","sidebar","usersPage","auth","form","FormReducer","app","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","__store__","Navbar","react_default","s","NavLink","to","activeClassName","active","Paginator","totalItemsCount","onPageChanged","_ref$portionSize","portionSize","pagesCount","Math","ceil","pages","i","push","portionCount","_useState","useState","_useState2","slicedToArray","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","paginator","onClick","cn","defineProperty","pageNumber","key","e","User","user","src","photos","small","disabled","some","Users","objectWithoutProperties","common_Paginator_Paginator","Users_User","createSelector","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","getFollowingInProgress","UsersContainer","_this","_this$props","Fragment","Preloader","components_Users_Users","React","Component","connect","bind","_x6","_ref4","_callee4","_context4","_x7","page","totalCount","Header","header","loginBlock","LoginButton","Redirect","HeaderContainer","components_Header_Header","LoginReduxForm","reduxForm","handleSubmit","onSubmit","required","style","stopSubmit","_error","withSuspense","Suspense","fallback","DialogsContainer","lazy","ProfileContainer","App","initializeApp","Header_HeaderContainer","components_Navbar_Navbar","Switch","Route","exact","path","render","Users_UsersContainer","components_Login_Login","AppContainer","withRouter","promise","Promise","all","SamuraiJSApp","HashRouter","react_redux_es","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_assets_images_preloader_svg__WEBPACK_IMPORTED_MODULE_1__","_assets_images_preloader_svg__WEBPACK_IMPORTED_MODULE_1___default","backgroundColor","preloader","maxLengthCreator","value","maxLength","mapStateToPropsForRedirect","withAuthRedirect","RedirectComponent","_React$Component","C_SN_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_2__","_super","C_SN_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_3__","C_SN_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","C_SN_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_4___default","react_router_dom__WEBPACK_IMPORTED_MODULE_5__","AboutMySite","posts","likesCount","newPostText","addPostActionCreator","setStatus","getUserProfile","C_SN_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","C_SN_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","file","_ref5","_callee5","getState","_context5","abrupt","reject","newPost","C_SN_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_3__","C_SN_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_2__","postId"],"mappings":"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","file":"static/js/main.2737ae74.chunk.js","sourcesContent":["import * as axios from \"axios\";\r\nimport {withAuthRedirect} from \"../hoc/withAuthRedirect\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport React from \"react\";\r\n\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    headers:     {\r\n        \"API-KEY\": \"5b81d964-99b4-407f-90c1-60763e8e54a8\"\r\n    }\r\n});\r\n\r\n\r\nexport const usersAPI = {\r\n    getUsers(currentPage = 1, pageSize = 10) {\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n            .then(response => {\r\n                return response.data;\r\n            });\r\n    },\r\n    follow(userId) {\r\n        return instance.post(`follow/${userId}`)\r\n    },\r\n    unfollow(userId) {\r\n        return instance.delete(`follow/${userId}`)\r\n    },\r\n    getProfile(userId) {\r\n        console.warn('Obsolete method. Please profileAPI object.')\r\n        return profileAPI.getProfile(userId);\r\n    }\r\n}\r\n\r\nexport const profileAPI = {\r\n    getProfile(userId) {\r\n        return instance.get(`profile/` + userId);\r\n    },\r\n    getStatus(userId) {\r\n        return instance.get(`profile/status/` + userId);\r\n    },\r\n    updateStatus(status) {\r\n        return instance.put(`profile/status`, { status: status });\r\n    },\r\n    savePhoto(photoFile) {\r\n        const formData = new FormData();\r\n\r\n        formData.append(\"image\", photoFile);\r\n\r\n        return instance.put(`profile/photo`, formData, {\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data'\r\n            }\r\n        });\r\n    },\r\n    saveProfile(profile) {\r\n        return instance.put(`profile`, profile);\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const authAPI = {\r\n    me() {\r\n        return instance.get(`auth/me`);\r\n    },\r\n    login(email, password, rememberMe = false, captcha = null) {\r\n        return instance.post(`auth/login`, { email, password, rememberMe, captcha });\r\n    },\r\n    logout() {\r\n        return instance.delete(`auth/login`);\r\n    }\r\n}\r\n\r\nexport const securityAPI = {\r\n    getCaptchaUrl() {\r\n        return instance.get(`security/get-captcha-url`);\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","const SEND_MESSAGE = 'SEND_MESSAGE';\r\n\r\n\r\ntype DialogType = {\r\n    id: number\r\n    name: string\r\n}\r\n\r\ntype MessageType = {\r\n    id: number\r\n    message: string\r\n}\r\n\r\nlet initialState = {\r\n    dialogs: [\r\n        {id: 1, name: 'Jove'},\r\n        {id: 2, name: 'Vic'},\r\n        {id: 3, name: 'Sv'},\r\n        {id: 4, name: 'Alex'},\r\n        {id: 5, name: 'Dandy'},\r\n        {id: 6, name: 'Mick'}\r\n    ] as Array<DialogType>,\r\n    messages: [\r\n        {id: 1, message: 'Hi'},\r\n        {id: 2, message: 'How is your it skills?'},\r\n        {id: 3, message: 'Yo'},\r\n        {id: 4, message: 'Nice to meet you'},\r\n        {id: 5, message: 'Thank you'}\r\n    ] as Array<MessageType>\r\n};\r\n\r\nexport type InitialStateType = typeof initialState\r\n\r\nconst dialogsReducer = (state = initialState, action: any) => {\r\n    switch (action.type) {\r\n        case SEND_MESSAGE:\r\n            let body = action.newMessageBody;\r\n            return {\r\n                ...state,\r\n                messages: [...state.messages, {id: 6, message: body}]\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\ntype SendMessageCreatorActionType = {\r\n    type: typeof SEND_MESSAGE\r\n    newMessageBody: string\r\n}\r\n\r\nexport const sendMessageCreator = (newMessageBody: string): SendMessageCreatorActionType => ({type: SEND_MESSAGE, newMessageBody})\r\n\r\n\r\nexport default dialogsReducer;","module.exports = __webpack_public_path__ + \"static/media/user.8b1dbb1f.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userPhoto\":\"users_userPhoto__2Q8mV\",\"selectedPage\":\"users_selectedPage__1uDnL\"};","module.exports = __webpack_public_path__ + \"static/media/preloader.6e7c9db7.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__3LCZV\",\"item\":\"Navbar_item__r53jG\",\"activeLink\":\"Navbar_activeLink__xML_-\"};","import React from \"react\";\r\nimport styles from \"./FormsControls.module.css\"\r\nimport {Field} from \"redux-form\";\r\n\r\nconst FormControl = ({input, meta: {touched, error}, children}) => {\r\n    const hasError = touched && error;\r\n    return (\r\n        <div className={styles.FormControl + \" \" + (hasError ? styles.error : \"\")}>\r\n            <div>\r\n                {children}\r\n            </div>\r\n            {hasError && <span>{error}</span>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Textarea = (props) => {\r\n    const {input, meta, child, ...restProps} = props;\r\n    return <FormControl {...props}><textarea {...input} {...restProps} /></FormControl>\r\n}\r\n\r\nexport const Input = (props) => {\r\n    const {input, meta, child, ...restProps} = props;\r\n    return <FormControl {...props}><input {...input} {...restProps} /></FormControl>\r\n}\r\n\r\nexport const createField = (placeholder, name, validators, component, props = {}, text = \"\") => (\r\n    <div>\r\n        <Field placeholder={placeholder} name={name}\r\n               validate={validators}\r\n               component={component}\r\n               {...props}\r\n        /> {text}\r\n    </div>\r\n)","// extracted by mini-css-extract-plugin\nmodule.exports = {\"FormControl\":\"FormsControls_FormControl__2eoG3\",\"error\":\"FormsControls_error__1k1ug\",\"formSummaryError\":\"FormsControls_formSummaryError__3Hnvw\",\"testAccount\":\"FormsControls_testAccount__hmnZh\"};","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","let initialState = {};\r\ntype InitialStateType = typeof initialState\r\nconst sidebarReducer = (state = initialState, action: any) => {\r\n    return state;\r\n}\r\n\r\nexport default sidebarReducer;","\r\nexport const updateObjectInArray = (items, itemId, objPropName, newObjProps) => {\r\n    return items.map(u => {\r\n        if (u[objPropName] === itemId) {\r\n            return {...u, ...newObjProps}\r\n        }\r\n        return u;\r\n    })\r\n}","import {usersAPI} from \"../api/api\";\r\nimport {updateObjectInArray} from \"../utils/object-helpers\";\r\nimport {PhotosType, UserType} from \"../types/types\";\r\n\r\nconst FOLLOW = 'FOLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst SET_USERS = 'SET_USERS';\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\r\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT';\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE_IS_FOLLOWING_PROGRESS';\r\n\r\n\r\nlet initialState = {\r\n    users: [] as Array<UserType>,\r\n    pageSize: 10,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: true,\r\n    followingInProgress: [] as Array<number>, // Array of users Id\r\n};\r\n\r\ntype InititalState = typeof  initialState\r\n\r\nconst usersReducer = (state = initialState, action: any): InititalState => {\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, \"id\", {followed: true} )\r\n            }\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, \"id\", {followed: false} )\r\n            }\r\n        case SET_USERS: {\r\n            return {...state, users: action.users}\r\n        }\r\n        case SET_CURRENT_PAGE: {\r\n            return {...state, currentPage: action.currentPage}\r\n        }\r\n        case SET_TOTAL_USERS_COUNT: {\r\n            return {...state, totalUsersCount: action.count}\r\n        }\r\n        case TOGGLE_IS_FETCHING: {\r\n            return {...state, isFetching: action.isFetching}\r\n        }\r\n        case TOGGLE_IS_FOLLOWING_PROGRESS: {\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.isFetching\r\n                    ? [...state.followingInProgress, action.userId]\r\n                    : state.followingInProgress.filter(id => id != action.userId)\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\ntype FollowSuccessActionType = {\r\n    type: typeof FOLLOW\r\n    userId: number\r\n}\r\nexport const followSuccess = (userId: number): FollowSuccessActionType => ({type: FOLLOW, userId})\r\ntype UnfollowSuccessActionType = {\r\n    type: typeof UNFOLLOW\r\n    userId: number\r\n}\r\nexport const unfollowSuccess = (userId: number): UnfollowSuccessActionType => ({type: UNFOLLOW, userId})\r\ntype SetUsersActionType = {\r\n    type: typeof SET_USERS\r\n    users: Array<UserType>\r\n}\r\nexport const setUsers = (users: Array<UserType>): SetUsersActionType => ({type: SET_USERS, users})\r\ntype SetCurrentPageActionType = {\r\n    type: typeof SET_CURRENT_PAGE\r\n    currentPage: number\r\n}\r\nexport const setCurrentPage = (currentPage: number): SetCurrentPageActionType => ({type: SET_CURRENT_PAGE, currentPage})\r\ntype SetTotalUsersCountActionType = {\r\n    type: typeof SET_TOTAL_USERS_COUNT\r\n    count: number\r\n}\r\nexport const setTotalUsersCount = (totalUsersCount: number): SetTotalUsersCountActionType => ({type: SET_TOTAL_USERS_COUNT, count: totalUsersCount})\r\ntype ToggleIsFetchingActionType = {\r\n    type: typeof TOGGLE_IS_FETCHING\r\n    isFetching: boolean\r\n}\r\nexport const toggleIsFetching = (isFetching: boolean): ToggleIsFetchingActionType => ({type: TOGGLE_IS_FETCHING, isFetching})\r\ntype ToggleFollowingProgressActionType = {\r\n    type: typeof TOGGLE_IS_FOLLOWING_PROGRESS\r\n    isFetching: boolean\r\n    userId: number\r\n}\r\nexport const toggleFollowingProgress = (isFetching: boolean, userId: number): ToggleFollowingProgressActionType => ({\r\n    type: TOGGLE_IS_FOLLOWING_PROGRESS,\r\n    isFetching,\r\n    userId\r\n})\r\n\r\nexport const requestUsers = (page: number, pageSize: number) => {\r\n    return async (dispatch: any) => {\r\n        dispatch(toggleIsFetching(true));\r\n        dispatch(setCurrentPage(page));\r\n\r\n        let data = await usersAPI.getUsers(page, pageSize);\r\n        dispatch(toggleIsFetching(false));\r\n        dispatch(setUsers(data.items));\r\n        dispatch(setTotalUsersCount(data.totalCount));\r\n    }\r\n}\r\n\r\nconst followUnfollowFlow = async (dispatch: any, userId: number, apiMethod: any, actionCreator: any) => {\r\n    dispatch(toggleFollowingProgress(true, userId));\r\n    let response = await apiMethod(userId);\r\n\r\n    if (response.data.resultCode == 0) {\r\n        dispatch(actionCreator(userId));\r\n    }\r\n    dispatch(toggleFollowingProgress(false, userId));\r\n}\r\n\r\nexport const follow = (userId: number) => {\r\n    return async (dispatch: any) => {\r\n         followUnfollowFlow(dispatch, userId, usersAPI.follow.bind(usersAPI), followSuccess);\r\n    }\r\n}\r\nexport const unfollow = (userId: number) => {\r\n    return async (dispatch: any) => {\r\n         followUnfollowFlow(dispatch, userId, usersAPI.unfollow.bind(usersAPI), unfollowSuccess);\r\n    }\r\n}\r\n\r\nexport default usersReducer;","import { stopSubmit } from \"redux-form\";\r\nimport {authAPI, securityAPI} from \"../api/api\";\r\n\r\nconst SET_USER_DATA = 'samurai-network/auth/SET_USER_DATA';\r\nconst GET_CAPTCHA_URL_SUCCESS = 'samurai-network/auth/GET_CAPTCHA_URL_SUCCESS';\r\n\r\nexport type InitialStateType2 = {\r\n    userId: number | null,\r\n    email: string | null,\r\n    login: string | null,\r\n    isAuth: boolean,\r\n    captchaUrl: string | null,\r\n}\r\n\r\nlet initialState = {\r\n    userId: null as number | null,\r\n    email: null as string | null,\r\n    login: null as string | null,\r\n    isAuth: false,\r\n    captchaUrl: null as string | null,\r\n};\r\n\r\nexport type InitialStateType =  typeof initialState\r\n\r\n\r\n\r\nconst authReducer = (state = initialState, action: any): InitialStateType  => {\r\n    switch (action.type) {\r\n        case SET_USER_DATA:\r\n        case GET_CAPTCHA_URL_SUCCESS:\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\ntype setAuthUserDataActionPayloadType = {\r\n    userId: number | null\r\n    email: string | null\r\n    login: string | null\r\n    isAuth: boolean\r\n}\r\n\r\ntype setAuthUserDataActionType = {\r\n    type: typeof SET_USER_DATA,\r\n    payload: setAuthUserDataActionPayloadType\r\n}\r\n\r\n\r\nexport const setAuthUserData = (userId: number | null, email: string | null, login: string | null, isAuth: boolean): setAuthUserDataActionType => ({\r\n    type: SET_USER_DATA, payload:\r\n        {userId, email, login, isAuth}\r\n});\r\n\r\ntype getCaptchaUrlSuccessActionType = {\r\n    type: typeof GET_CAPTCHA_URL_SUCCESS,\r\n    payload: {captchaUrl: string}\r\n}\r\n\r\nexport const getCaptchaUrlSuccess = (captchaUrl: string): getCaptchaUrlSuccessActionType => ({\r\n    type: GET_CAPTCHA_URL_SUCCESS, payload: {captchaUrl}\r\n});\r\n\r\n\r\nexport const getAuthUserData = () => async (dispatch: any) => {\r\n    let response = await authAPI.me();\r\n\r\n    if (response.data.resultCode === 0) {\r\n        let {id, login, email} = response.data.data;\r\n        dispatch(setAuthUserData(id, email, login, true));\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const login = (email: string, password: string, rememberMe: boolean, captcha: string) => async (dispatch: any) => {\r\n    let response = await authAPI.login(email, password, rememberMe, captcha);\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(getAuthUserData())\r\n    } else {\r\n        if (response.data.resultCode === 10) {\r\n            dispatch(getCaptchaUrl());\r\n        }\r\n        let message = response.data.messages.length > 0 ? response.data.messages[0] : \"Some error\";\r\n        dispatch(stopSubmit(\"login\", {_error: message}));\r\n    }\r\n}\r\n\r\nexport const getCaptchaUrl = () => async (dispatch: any) => {\r\n    const response = await securityAPI.getCaptchaUrl();\r\n    const captchaUrl = response.data.url;\r\n\r\n    dispatch(getCaptchaUrlSuccess(captchaUrl));\r\n}\r\n\r\n\r\nexport const logout = () => async (dispatch: any) => {\r\n    let response = await authAPI.logout();\r\n\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setAuthUserData(null, null, null, false));\r\n    }\r\n}\r\n\r\nexport default authReducer;","\r\nimport {getAuthUserData} from \"./auth-reducer\";\r\n\r\nconst INITIALIZED_SUCCESS = 'SET_USER_DATA';\r\n\r\n\r\n\r\nexport type InitialStateType = {\r\n    initialized: boolean\r\n}\r\n\r\n\r\nlet initialState: InitialStateType = {\r\n    initialized: false\r\n   // globalError: null\r\n};\r\n\r\n\r\nexport const appReducer = (state = initialState, action: any): InitialStateType => {\r\n    switch (action.type) {\r\n        case INITIALIZED_SUCCESS:\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\ntype InitializedSuccessActionType = {\r\n    type: typeof INITIALIZED_SUCCESS\r\n}\r\n\r\nexport const initializedSuccess = ():InitializedSuccessActionType => ({type: INITIALIZED_SUCCESS})\r\n\r\nexport const initializeApp = () => (dispatch: any) => {\r\n    let promise = dispatch(getAuthUserData());\r\n    Promise.all([promise])\r\n        .then(() => {\r\n        dispatch(initializedSuccess());\r\n    });\r\n}\r\n\r\n","import {applyMiddleware, combineReducers, compose, createStore} from \"redux\";\r\nimport profileReducer from \"./profile-reducer\";\r\nimport dialogsReducer from \"./dialogs-reducer\";\r\nimport sidebarReducer from \"./sidebar-reducer\";\r\nimport usersReducer from \"./users-reducer\";\r\nimport authReducer from \"./auth-reducer\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport {reducer as FormReducer} from 'redux-form'\r\nimport {appReducer} from \"./app-reducer\";\r\n\r\nlet reducers = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    sidebar: sidebarReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    form: FormReducer,\r\n    app: appReducer\r\n});\r\n\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunkMiddleware)));\r\n\r\n\r\nwindow.__store__ = store;\r\n\r\n\r\nexport default store;","import React from 'react';\r\nimport s from './Navbar.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport st from \"../../MainPage.module.css\";\r\n\r\nconst Navbar = () => {\r\n    return (\r\n        <nav className={s.nav}>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/profile\" activeClassName={s.activeLink}>Profile</NavLink>\r\n            </div>\r\n            <div className={`${s.item} ${s.active}`}>\r\n                <NavLink to=\"/dialogs\" activeClassName={s.activeLink}>Messages</NavLink>\r\n            </div>\r\n            <div className={`${s.item} ${s.active}`}>\r\n                <NavLink to=\"/users\" activeClassName={s.activeLink}>Users</NavLink>\r\n            </div>\r\n\r\n            <div className={s.item}>\r\n                <a>News in developing</a>\r\n            </div>\r\n            <div className={s.item}>\r\n                <a>Music in developing</a>\r\n            </div>\r\n            <div className={s.item}>\r\n                <a>Settings in developing</a>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Navbar;","import React, {useState} from 'react';\r\nimport styles from \"./Paginator.module.css\";\r\nimport cn from \"classnames\";\r\n\r\nlet Paginator = ({totalItemsCount, pageSize, currentPage, onPageChanged, portionSize = 10}) => {\r\n\r\n    let pagesCount = Math.ceil(totalItemsCount / pageSize);\r\n\r\n    let pages = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i);\r\n    }\r\n\r\n    let portionCount = Math.ceil(pagesCount / portionSize);\r\n    let [portionNumber, setPortionNumber] = useState(1);\r\n    let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\r\n    let rightPortionPageNumber = portionNumber * portionSize;\r\n\r\n\r\n    return <div className={styles.paginator}>\r\n        { portionNumber > 1 &&\r\n        <button onClick={() => { setPortionNumber(portionNumber - 1) }}>PREV</button> }\r\n\r\n        {pages\r\n            .filter(p => p >= leftPortionPageNumber && p<=rightPortionPageNumber)\r\n            .map((p) => {\r\n                return <span className={ cn({\r\n                    [styles.selectedPage]: currentPage === p\r\n                }, styles.pageNumber) }\r\n                             key={p}\r\n                             onClick={(e) => {\r\n                                 onPageChanged(p);\r\n                             }}>{p}</span>\r\n            })}\r\n        { portionCount > portionNumber &&\r\n        <button onClick={() => { setPortionNumber(portionNumber + 1) }}>NEXT</button> }\r\n\r\n\r\n    </div>\r\n}\r\n\r\nexport default Paginator;","import React from 'react';\r\nimport styles from \"./users.module.css\";\r\nimport userPhoto from \"../../assets/images/user.png\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\n\r\nlet User = ({user, followingInProgress, unfollow, follow}) => {\r\n    return (\r\n        <div>\r\n                <span>\r\n                    <div>\r\n                       <NavLink to={'/profile/' + user.id}>\r\n                        <img src={user.photos.small != null ? user.photos.small : userPhoto}\r\n                             className={styles.userPhoto}/>\r\n                       </NavLink>\r\n                    </div>\r\n                    <div>\r\n                        {user.followed\r\n                            ? <button disabled={followingInProgress\r\n                                .some(id => id === user.id)}\r\n                                      onClick={() => { unfollow(user.id) }}>\r\n                                Unfollow</button>\r\n                            : <button disabled={followingInProgress.some(id => id === user.id)}\r\n                                      onClick={() => { follow(user.id) }}>\r\n                                Follow</button>}\r\n\r\n                    </div>\r\n                </span>\r\n            <span>\r\n                    <span>\r\n                        <div>{user.name}</div>\r\n                        <div>{user.status}</div>\r\n                    </span>\r\n                    <span>\r\n                        <div>{\"user.location.country\"}</div>\r\n                        <div>{\"user.location.city\"}</div>\r\n                    </span>\r\n                </span>\r\n        </div>)\r\n}\r\n\r\nexport default User;","import React from 'react';\r\nimport Paginator from \"../common/Paginator/Paginator\";\r\nimport User from \"./User\";\r\n\r\nlet Users = ({currentPage, totalUsersCount, pageSize, onPageChanged, users, ...props}) => {\r\n    return <div>\r\n        <Paginator currentPage={currentPage} onPageChanged={onPageChanged}\r\n                   totalItemsCount={totalUsersCount} pageSize={pageSize}/>\r\n        <div>\r\n            {\r\n                users.map(u => <User user={u}\r\n                                     followingInProgress={props.followingInProgress}\r\n                                     key={u.id}\r\n                                     unfollow={props.unfollow}\r\n                                     follow={props.follow}\r\n                    />\r\n                )\r\n            }\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default Users;","import {createSelector} from \"reselect\";\r\n\r\nconst getUsersSelector = (state) => {\r\n    return state.usersPage.users;\r\n}\r\n\r\nexport const getUsers = createSelector(getUsersSelector,\r\n    (users) => {\r\n\r\n   return users.filter(u => true);\r\n})\r\n\r\nexport const getPageSize = (state) => {\r\n    return state.usersPage.pageSize;\r\n}\r\n\r\nexport const getTotalUsersCount = (state) => {\r\n    return state.usersPage.totalUsersCount;\r\n}\r\n\r\n\r\nexport const getCurrentPage = (state) => {\r\n    return state.usersPage.currentPage;\r\n}\r\n\r\n\r\nexport const getIsFetching = (state) => {\r\n    return state.usersPage.isFetching;\r\n}\r\n\r\n\r\nexport const getFollowingInProgress = (state) => {\r\n    return state.usersPage.followingInProgress;\r\n}","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {\r\n    follow,\r\n    setCurrentPage,\r\n    unfollow, toggleFollowingProgress, requestUsers\r\n} from '../../redux/users-reducer';\r\nimport Users from './Users';\r\nimport Preloader from \"../common/Preloader/Preloader\";\r\nimport {compose} from \"redux\";\r\nimport {\r\n    getCurrentPage,\r\n    getFollowingInProgress,\r\n    getIsFetching,\r\n    getPageSize,\r\n    getTotalUsersCount, getUsers\r\n} from \"../../redux/users-selectors\";\r\n\r\n\r\nclass UsersContainer extends React.Component {\r\n    componentDidMount() {\r\n        const {currentPage, pageSize} = this.props;\r\n        this.props.getUsers(currentPage, pageSize);\r\n    }\r\n\r\n    onPageChanged = (pageNumber) => {\r\n        const {pageSize} = this.props;\r\n        this.props.getUsers(pageNumber, pageSize);\r\n    }\r\n\r\n    render() {\r\n\r\n        return <>\r\n            {this.props.isFetching ? <Preloader/> : null}\r\n            <Users totalUsersCount={this.props.totalUsersCount}\r\n                   pageSize={this.props.pageSize}\r\n                   currentPage={this.props.currentPage}\r\n                   onPageChanged={this.onPageChanged}\r\n                   users={this.props.users}\r\n                   follow={this.props.follow}\r\n                   unfollow={this.props.unfollow}\r\n                   followingInProgress={this.props.followingInProgress}\r\n            />\r\n        </>\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        users: getUsers(state),\r\n        pageSize: getPageSize(state),\r\n        totalUsersCount: getTotalUsersCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        isFetching: getIsFetching(state),\r\n        followingInProgress: getFollowingInProgress(state)\r\n    }\r\n}\r\n\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {follow, unfollow, setCurrentPage, toggleFollowingProgress, getUsers: requestUsers})\r\n)(UsersContainer)","import React from 'react';\r\nimport s from './Header.module.css';\r\nimport {NavLink, Redirect} from \"react-router-dom\";\r\n\r\n\r\nconst Header = (props) => {\r\n    return <header className={s.header}>\r\n        <img src='https://im0-tub-ru.yandex.net/i?id=5d9610c3cdebb56618e633c7fa0d0d52-sr&n=13' />\r\n\r\n\r\n\r\n        <div className={s.loginBlock}>\r\n            { props.isAuth\r\n                ? <div>{props.login} - <button onClick={props.logout} type={\"button\"} className={s.LoginButton}>Log out</button></div>\r\n                : <Redirect to={'/login'}/> }\r\n            {props.isAuth}\r\n        </div>\r\n    </header>\r\n}\r\n\r\nexport default Header;\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport Header from \"./Header\";\r\nimport {connect} from \"react-redux\";\r\nimport {logout} from \"../../redux/auth-reducer\";\r\n\r\nclass HeaderContainer extends React.Component {\r\n\r\n\r\n    render() {\r\n        return <Header {...this.props} />\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n    login: state.auth.login,\r\n});\r\n\r\nexport default connect(mapStateToProps, {logout})(HeaderContainer);","import React from 'react';\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {createField, Input} from \"../common/FormsControls/FormsControls\";\r\nimport {required} from \"../../utils/validators/validators\";\r\nimport {connect} from \"react-redux\";\r\nimport {login} from \"../../redux/auth-reducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport style from \"./../common/FormsControls/FormsControls.module.css\";\r\nimport st from \"../../MainPage.module.css\";\r\nimport s from \"../Header/Header.module.css\";\r\nimport {Exit1} from \"../Header/Header\";\r\n\r\n\r\n\r\nconst LoginForm = ({handleSubmit, error, captchaUrl}) => {\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            {createField(\"Email\", \"email\", [required], Input)}\r\n            {createField(\"Password\", \"password\", [required], Input, {type: \"password\"})}\r\n            {createField(null, \"rememberMe\", [], Input, {type: \"checkbox\"}, \"remember me\")}\r\n\r\n            {captchaUrl && <img src={captchaUrl}/>}\r\n            {captchaUrl && createField(\"Symbols from image\", \"captcha\", [required], Input, {})}\r\n\r\n\r\n            {error && <div className={style.formSummaryError}>\r\n                {error}\r\n            </div>\r\n            }\r\n            <div>\r\n                <button>Login</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst LoginReduxForm = reduxForm({form: 'login'})(LoginForm)\r\n\r\nconst Login = (props) => {\r\n    const onSubmit = (formData) => {\r\n        props.login(formData.email, formData.password, formData.rememberMe, formData.captcha);\r\n    }\r\n\r\n    if (props.isAuth) {\r\n        return <Redirect to={\"/profile\"}/>\r\n    }\r\n\r\n    return <div>\r\n        <h1 className={style.testAccount}>Testing account: free@samuraijs.com </h1>\r\n        <h1 className={style.testAccount}>Password: free </h1>\r\n        <h1 className={style.testAccount}>This site is under development by Anton Golenko at this stage The basic\r\n            concepts of the code have been implemented which you can see in my github repository. The design of the site\r\n            is still in development and I used the simplest one, first working hard on the functionality. You can test\r\n            my login page with validators and also users,profile and messages pages.</h1>\r\n        <h1>Login</h1>\r\n        <LoginReduxForm onSubmit={onSubmit} captchaUrl={props.captchaUrl}/>\r\n        <h1 className={style.testAccount}>My Github repository: https://github.com/MethodFirst/SN </h1>\r\n    </div>\r\n}\r\nconst mapStateToProps = (state) => ({\r\n    captchaUrl: state.auth.captchaUrl,\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport default connect(mapStateToProps, {login})(Login);","import React from \"react\";\r\nimport Preloader from \"../components/common/Preloader/Preloader\";\r\n\r\n\r\nexport const withSuspense = (Component) => {\r\n    return (props) => {\r\n        return <React.Suspense fallback={<Preloader />} >\r\n            <Component {...props} />\r\n        </React.Suspense>\r\n    };\r\n}","import React, {Component} from 'react';\r\nimport './App.css';\r\nimport Navbar from './components/Navbar/Navbar';\r\nimport {BrowserRouter, HashRouter, NavLink, Redirect, Route, Switch, withRouter} from \"react-router-dom\";\r\nimport UsersContainer from \"./components/Users/UsersContainer\";\r\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\r\nimport LoginPage from \"./components/Login/Login\";\r\nimport {connect, Provider} from \"react-redux\";\r\nimport {compose} from \"redux\";\r\nimport {initializeApp} from \"./redux/app-reducer\";\r\nimport Preloader from \"./components/common/Preloader/Preloader\";\r\nimport store from \"./redux/redux-store\";\r\nimport {withSuspense} from \"./hoc/withSuspense\";\r\nimport {withAuthRedirect} from \"./hoc/withAuthRedirect\";\r\nimport s from \"./components/Header/Header.module.css\";\r\nimport st from \"./MainPage.module.css\"\r\n\r\nconst DialogsContainer = React.lazy(() => import('./components/Dialogs/DialogsContainer'));\r\nconst ProfileContainer = React.lazy(() => import('./components/Profile/ProfileContainer'));\r\n\r\n\r\nclass App extends Component {\r\n    componentDidMount() {\r\n        this.props.initializeApp();\r\n    }\r\n\r\n    render() {\r\n        if (!this.props.initialized) {\r\n            return <Preloader/>\r\n        }\r\n\r\n        return (\r\n            <div className='app-wrapper'>\r\n                <div className='app-wrapper-content2'>\r\n                    <div>WELCOME</div>\r\n                </div>\r\n                <HeaderContainer/>\r\n                <Navbar/>\r\n\r\n                <div className='app-wrapper-content'>\r\n                    <Switch>\r\n                        <Route exact path='/'\r\n                               render={() => <Redirect to={\"/profile\"}/>}/>\r\n\r\n                        <Route path='/dialogs'\r\n                               render={withSuspense(DialogsContainer)}/>\r\n\r\n                        <Route path='/profile/:userId?'\r\n                               render={withSuspense(ProfileContainer)}/>\r\n\r\n                        <Route path='/users'\r\n                               render={() => <UsersContainer/>}/>\r\n\r\n                        <Route path='/login'\r\n                               render={() => <LoginPage/>}/>\r\n\r\n                        <Route path='*'\r\n                               render={() => <div>404 NOT FOUND</div>}/>\r\n                    </Switch>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    initialized: state.app.initialized\r\n})\r\n\r\nlet AppContainer = compose(\r\n    withRouter,\r\n    connect(mapStateToProps, {initializeApp}))\r\n(App);\r\n\r\nconst SamuraiJSApp = (props) => {\r\n    return <HashRouter>\r\n        <Provider store={store}>\r\n            <AppContainer/>\r\n        </Provider>\r\n    </HashRouter>\r\n}\r\n\r\nexport default SamuraiJSApp;\r\n","import * as serviceWorker from './serviceWorker';\r\nimport store from \"./redux/redux-store\";\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport {BrowserRouter} from \"react-router-dom\";\r\nimport {Provider} from \"react-redux\";\r\nimport SamuraiJSApp from \"./App\";\r\nimport {withAuthRedirect} from \"./hoc/withAuthRedirect\";\r\n\r\nReactDOM.render(<SamuraiJSApp/>, document.getElementById('root'));\r\n\r\n\r\n// API\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","import React from 'react';\r\nimport preloader from \"../../../assets/images/preloader.svg\";\r\n\r\nlet Preloader = (props) => {\r\n    return <div  style={ { backgroundColor: 'white' } }>\r\n        <img src={preloader} />\r\n    </div>\r\n}\r\n\r\nexport default Preloader;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__2v6Qh\",\"loginBlock\":\"Header_loginBlock__3uozL\",\"login\":\"Header_login__1OWWo\",\"LoginButton\":\"Header_LoginButton__uC28X\"};","export const required = value => {\r\n    if (value) return undefined;\r\n\r\n    return \"Field is required\";\r\n\r\n}\r\n\r\n\r\nexport const maxLengthCreator= (maxLength) => (value) => {\r\n    if (value.length > maxLength) return `Max length is ${maxLength} symbols`\r\n    return undefined;\r\n}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paginator\":\"Paginator_paginator__DvTSB\",\"pageNumber\":\"Paginator_pageNumber__32gG-\",\"selectedPage\":\"Paginator_selectedPage__2-VS7\"};","import React from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to='/login' />\r\n\r\n            return <Component {...this.props}/>\r\n        }\r\n    }\r\n\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n\r\n    return ConnectedAuthRedirectComponent;\r\n\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AboutMySite\":\"MainPage_AboutMySite__3PNfq\"};","import {profileAPI, usersAPI} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nconst ADD_POST = 'ADD-POST';\r\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\r\nconst SET_STATUS = 'SET_STATUS';\r\nconst DELETE_POST = 'DELETE_POST';\r\nconst SAVE_PHOTO_SUCCESS = 'SAVE_PHOTO_SUCCESS';\r\n\r\n\r\ntype PostType = {\r\n    id: number\r\n    message: string\r\n    likesCount: number\r\n}\r\ntype ContactsType = {\r\n    github: string\r\n    vk: string\r\n    facebook: string\r\n    instagram: string\r\n    twitter: string\r\n    website: string\r\n    youtube: string\r\n    mainLink: string\r\n}\r\ntype PhotosType = {\r\n    small: string | null\r\n    large: string | null\r\n}\r\ntype ProfileType = {\r\n    userId: number\r\n    lookingForAJob: boolean\r\n    lookingForAJobDescription: string\r\n    fullName: string\r\n    contacts: ContactsType\r\n    photos: PhotosType\r\n}\r\n\r\n\r\nlet initialState = {\r\n    posts: [\r\n        {id: 1, message: 'Hi, how are you?', likesCount: 13},\r\n        {id: 2, message: 'It\\'s my first post', likesCount: 11},\r\n        {id: 3, message: 'Improve my skills', likesCount: 99},\r\n        {id: 4, message: 'Thank you', likesCount: 5}\r\n    ] as Array<PostType>,\r\n    profile: null as ProfileType | null,\r\n    status: \"\",\r\n    newPostText: \"\"\r\n};\r\n\r\nexport type InitialStateType = typeof initialState\r\n\r\nconst profileReducer = (state = initialState, action: any): InitialStateType => {\r\n\r\n    switch (action.type) {\r\n        case ADD_POST: {\r\n            let newPost = {\r\n                id: 5,\r\n                message: action.newPostText,\r\n                likesCount: 0\r\n            };\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, newPost],\r\n                newPostText: ''\r\n            };\r\n        }\r\n        case SET_STATUS: {\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            }\r\n        }\r\n        case SET_USER_PROFILE: {\r\n            return {...state, profile: action.profile}\r\n        }\r\n\r\n        case DELETE_POST:\r\n            return {...state, posts: state.posts.filter(p => p.id != action.postId)}\r\n\r\n        case SAVE_PHOTO_SUCCESS:\r\n            return {...state, profile: {...state.profile, photos: action.photos } as ProfileType}\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\ntype AddPostActionCreatorActionType = {\r\n    type: typeof ADD_POST\r\n    newPostText: string\r\n}\r\n\r\nexport const addPostActionCreator = (newPostText: string): AddPostActionCreatorActionType => ({type: ADD_POST, newPostText})\r\ntype SetUserProfileActionType = {\r\n    type: typeof SET_USER_PROFILE\r\n    profile: ProfileType\r\n}\r\nexport const setUserProfile = (profile: ProfileType ): SetUserProfileActionType => ({type: SET_USER_PROFILE, profile})\r\ntype SetStatusProfileActionType = {\r\n    type: typeof SET_STATUS\r\n    status: string\r\n}\r\nexport const setStatus = (status: string):SetStatusProfileActionType => ({type: SET_STATUS, status})\r\ntype DeletePostActionType = {\r\n    type: typeof DELETE_POST\r\n    postId: number\r\n}\r\nexport const deletePost = (postId: number): DeletePostActionType => ({type: DELETE_POST, postId})\r\ntype SavePhotoSuccessActionType = {\r\n    type: typeof SAVE_PHOTO_SUCCESS\r\n    photos: PhotosType\r\n}\r\nexport const savePhotoSuccess = (photos: PhotosType): SavePhotoSuccessActionType => ({type: SAVE_PHOTO_SUCCESS, photos})\r\n\r\nexport const getUserProfile = (userId: number) => async (dispatch: any) => {\r\n    const response = await usersAPI.getProfile(userId);\r\n    dispatch(setUserProfile(response.data));\r\n}\r\n\r\nexport const getStatus = (userId: number) => async (dispatch: any) => {\r\n    let response = await profileAPI.getStatus(userId);\r\n    dispatch(setStatus(response.data));\r\n}\r\n\r\nexport const updateStatus = (status: string) => async (dispatch: any) => {\r\n    let response = await profileAPI.updateStatus(status);\r\n\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setStatus(status));\r\n    }\r\n}\r\nexport const savePhoto = (file: any) => async (dispatch: any) => {\r\n    let response = await profileAPI.savePhoto(file);\r\n\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(savePhotoSuccess(response.data.data.photos));\r\n    }\r\n}\r\n\r\nexport const saveProfile = (profile: ProfileType) => async (dispatch: any, getState: any) => {\r\n    const userId = getState().auth.userId;\r\n    const response = await profileAPI.saveProfile(profile);\r\n    if (response.data.resultCode === 0) {\r\n      dispatch(getUserProfile(userId));\r\n    } else {\r\n        dispatch(stopSubmit(\"edit-profile\", {_error: response.data.messages[0]}));\r\n        return Promise.reject(response.data.messages[0])\r\n    }\r\n\r\n}\r\n\r\nexport default profileReducer;"],"sourceRoot":""}