{"version":3,"sources":["api/api.js","components/Navbar/Navbar.module.css","components/Users/users.module.css","assets/images/user.png","assets/images/preloader.svg","components/common/FormsControls/FormsControls.js","serviceWorker.js","redux/sidebar-reducer.js","utils/object-helpers.js","redux/users-reducer.js","redux/auth-reducer.js","redux/app-reducer.js","redux/redux-store.js","components/Navbar/Navbar.jsx","components/common/Paginator/Paginator.jsx","components/Users/User.jsx","components/Users/Users.jsx","redux/users-selectors.js","components/Users/UsersContainer.jsx","components/Header/Header.jsx","components/Header/HeaderContainer.jsx","components/Login/Login.jsx","hoc/withSuspense.js","App.js","index.js","components/common/Preloader/Preloader.js","components/common/FormsControls/FormsControls.module.css","components/common/Paginator/Paginator.module.css","utils/validators/validators.js","components/Header/Header.module.css","redux/profile-reducer.js","redux/dialogs-reducer.js"],"names":["__webpack_require__","d","__webpack_exports__","usersAPI","profileAPI","authAPI","axios__WEBPACK_IMPORTED_MODULE_0__","instance","axios","withCredentials","baseURL","headers","API-KEY","getUsers","currentPage","arguments","length","undefined","pageSize","get","concat","then","response","data","follow","userId","post","unfollow","delete","getProfile","console","warn","getStatus","updateStatus","status","put","me","login","email","password","rememberMe","logout","module","exports","nav","item","activeLink","userPhoto","selectedPage","p","FormControl","_ref","input","_ref$meta","meta","touched","error","children","hasError","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","className","styles","formControl","Textarea","props","restProps","child","Object","C_SN_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","assign","Input","createField","placeholder","name","validators","component","text","redux_form__WEBPACK_IMPORTED_MODULE_3__","validate","Boolean","window","location","hostname","match","initialState","sidebarReducer","state","updateObjectInArray","items","itemId","objPropName","newObjProps","map","u","objectSpread2","users","totalUsersCount","isFetching","followingInProgress","setCurrentPage","type","toggleIsFetching","toggleFollowingProgress","usersReducer","action","followed","count","toConsumableArray","filter","id","isAuth","setAuthUserData","payload","getAuthUserData","asyncToGenerator","regenerator_default","mark","_callee","dispatch","_response$data$data","_login","wrap","_context","prev","next","sent","resultCode","stop","_x","apply","this","authReducer","initialized","reducers","combineReducers","profilePage","profileReducer","dialogsPage","dialogsReducer","sidebar","usersPage","auth","form","FormReducer","app","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","__store__","Navbar","react_default","s","NavLink","to","activeClassName","active","Paginator","totalItemsCount","onPageChanged","_ref$portionSize","portionSize","pagesCount","Math","ceil","pages","i","push","portionCount","_useState","useState","_useState2","slicedToArray","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","paginator","onClick","cn","defineProperty","pageNumber","key","e","User","user","src","photos","small","disabled","some","Users","objectWithoutProperties","common_Paginator_Paginator","Users_User","createSelector","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","getFollowingInProgress","UsersContainer","_this","_this$props","Fragment","Preloader","components_Users_Users","React","Component","connect","followSuccess","unfollowSuccess","page","totalCount","Header","header","loginBlock","HeaderContainer","components_Header_Header","_ref3","_callee3","_context3","_x3","LoginReduxForm","reduxForm","handleSubmit","onSubmit","required","style","formSummaryError","_ref2","_callee2","message","_context2","messages","stopSubmit","_error","_x2","Redirect","formData","withSuspense","Suspense","fallback","DialogsContainer","lazy","bind","ProfileContainer","App","initializeApp","Header_HeaderContainer","components_Navbar_Navbar","Route","path","render","Users_UsersContainer","components_Login_Login","AppContainer","withRouter","promise","Promise","all","SamuraiJSApp","HashRouter","react_redux_es","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_assets_images_preloader_svg__WEBPACK_IMPORTED_MODULE_1__","_assets_images_preloader_svg__WEBPACK_IMPORTED_MODULE_1___default","backgroundColor","preloader","maxLengthCreator","value","maxLength","posts","likesCount","profile","addPostActionCreator","newPostText","setStatus","getUserProfile","newPost","C_SN_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_1__","C_SN_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","postId","dialogs","sendMessageCreator","newMessageBody","body"],"mappings":"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","file":"static/js/main.2e40f363.chunk.js","sourcesContent":["import * as axios from \"axios\";\r\n\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    headers:     {\r\n        \"API-KEY\": \"5b81d964-99b4-407f-90c1-60763e8e54a8\"\r\n    }\r\n});\r\n\r\n\r\nexport const usersAPI = {\r\n    getUsers(currentPage = 1, pageSize = 10) {\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n            .then(response => {\r\n                return response.data;\r\n            });\r\n    },\r\n    follow(userId) {\r\n        return instance.post(`follow/${userId}`)\r\n    },\r\n    unfollow(userId) {\r\n        return instance.delete(`follow/${userId}`)\r\n    },\r\n    getProfile(userId) {\r\n        console.warn('Obsolete method. Please profileAPI object.')\r\n        return profileAPI.getProfile(userId);\r\n    }\r\n}\r\n\r\nexport const profileAPI = {\r\n    getProfile(userId) {\r\n        return instance.get(`profile/` + userId);\r\n    },\r\n    getStatus(userId) {\r\n        return instance.get(`profile/status/` + userId);\r\n    },\r\n    updateStatus(status) {\r\n        return instance.put(`profile/status`, { status: status });\r\n    }\r\n}\r\n\r\nexport const authAPI = {\r\n    me() {\r\n        return instance.get(`auth/me`);\r\n    },\r\n    login(email, password, rememberMe = false) {\r\n        return instance.post(`auth/login`, { email, password, rememberMe });\r\n    },\r\n    logout() {\r\n        return instance.delete(`auth/login`);\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__3LCZV\",\"item\":\"Navbar_item__r53jG\",\"activeLink\":\"Navbar_activeLink__xML_-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userPhoto\":\"users_userPhoto__2Q8mV\",\"selectedPage\":\"users_selectedPage__1uDnL\"};","module.exports = __webpack_public_path__ + \"static/media/user.8b1dbb1f.png\";","module.exports = __webpack_public_path__ + \"static/media/preloader.6e7c9db7.svg\";","import React from \"react\";\r\nimport styles from \"./FormsControls.module.css\"\r\nimport {Field} from \"redux-form\";\r\n\r\nconst FormControl = ({input, meta: {touched, error}, children}) => {\r\n    const hasError = touched && error;\r\n    return (\r\n        <div className={styles.formControl + \" \" + (hasError ? styles.error : \"\")}>\r\n            <div>\r\n                {children}\r\n            </div>\r\n            {hasError && <span>{error}</span>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Textarea = (props) => {\r\n    const {input, meta, child, ...restProps} = props;\r\n    return <FormControl {...props}><textarea {...input} {...restProps} /></FormControl>\r\n}\r\n\r\nexport const Input = (props) => {\r\n    const {input, meta, child, ...restProps} = props;\r\n    return <FormControl {...props}><input {...input} {...restProps} /></FormControl>\r\n}\r\n\r\nexport const createField = (placeholder, name, validators, component, props = {}, text = \"\") => (\r\n    <div>\r\n        <Field placeholder={placeholder} name={name}\r\n               validate={validators}\r\n               component={component}\r\n               {...props}\r\n        /> {text}\r\n    </div>\r\n)","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","let initialState = {};\r\n\r\nconst sidebarReducer = (state = initialState, action) => {\r\n    return state;\r\n}\r\n\r\nexport default sidebarReducer;","\r\nexport const updateObjectInArray = (items, itemId, objPropName, newObjProps) => {\r\n    return items.map(u => {\r\n        if (u[objPropName] === itemId) {\r\n            return {...u, ...newObjProps}\r\n        }\r\n        return u;\r\n    })\r\n}","import {usersAPI} from \"../api/api\";\r\nimport {updateObjectInArray} from \"../utils/object-helpers\";\r\n\r\nconst FOLLOW = 'FOLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst SET_USERS = 'SET_USERS';\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\r\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT';\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE_IS_FOLLOWING_PROGRESS';\r\n\r\nlet initialState = {\r\n    users: [ ],\r\n    pageSize: 10,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: true,\r\n    followingInProgress: []\r\n};\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, \"id\", {followed: true} )\r\n            }\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, \"id\", {followed: false} )\r\n            }\r\n        case SET_USERS: {\r\n            return { ...state, users: action.users }\r\n        }\r\n        case SET_CURRENT_PAGE: {\r\n            return { ...state, currentPage: action.currentPage}\r\n        }\r\n        case SET_TOTAL_USERS_COUNT: {\r\n            return { ...state, totalUsersCount: action.count}\r\n        }\r\n        case TOGGLE_IS_FETCHING: {\r\n            return { ...state, isFetching: action.isFetching}\r\n        }\r\n        case TOGGLE_IS_FOLLOWING_PROGRESS: {\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.isFetching\r\n                    ? [...state.followingInProgress, action.userId]\r\n                    : state.followingInProgress.filter(id => id != action.userId)\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport const followSuccess = (userId) => ({type: FOLLOW, userId })\r\nexport const unfollowSuccess = (userId) => ({type: UNFOLLOW, userId })\r\nexport const setUsers = (users) => ({type: SET_USERS, users })\r\nexport const setCurrentPage = (currentPage) => ({type: SET_CURRENT_PAGE, currentPage })\r\nexport const setTotalUsersCount = (totalUsersCount) => ({type: SET_TOTAL_USERS_COUNT, count: totalUsersCount })\r\nexport const toggleIsFetching = (isFetching) => ({type: TOGGLE_IS_FETCHING, isFetching })\r\nexport const toggleFollowingProgress = (isFetching, userId) => ({type: TOGGLE_IS_FOLLOWING_PROGRESS, isFetching, userId })\r\n\r\nexport const requestUsers = (page, pageSize) => {\r\n    return (dispatch) => {\r\n        dispatch(toggleIsFetching(true));\r\n        dispatch(setCurrentPage(page));\r\n        usersAPI.getUsers(page, pageSize).then(data => {\r\n            dispatch(toggleIsFetching(false));\r\n            dispatch(setUsers(data.items));\r\n            dispatch(setTotalUsersCount(data.totalCount));\r\n        });\r\n    }\r\n}\r\nexport const follow = (userId) => {\r\n    return (dispatch) => {\r\n        dispatch(toggleFollowingProgress(true, userId));\r\n        usersAPI.follow(userId)\r\n            .then(response => {\r\n                if (response.data.resultCode == 0) {\r\n                    dispatch(followSuccess(userId));\r\n                }\r\n                dispatch(toggleFollowingProgress(false, userId));\r\n            });\r\n    }\r\n}\r\nexport const unfollow = (userId) => {\r\n    return (dispatch) => {\r\n        dispatch(toggleFollowingProgress(true, userId));\r\n        usersAPI.unfollow(userId)\r\n            .then(response => {\r\n                if (response.data.resultCode == 0) {\r\n                    dispatch(unfollowSuccess(userId));\r\n                }\r\n                dispatch(toggleFollowingProgress(false, userId));\r\n            });\r\n    }\r\n}\r\n\r\nexport default usersReducer;","import {authAPI} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nconst SET_USER_DATA = 'samurai-network/auth/SET_USER_DATA';\r\n\r\nlet initialState = {\r\n    userId: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false\r\n};\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_USER_DATA:\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport const setAuthUserData = (userId, email, login, isAuth) => ({\r\n    type: SET_USER_DATA, payload:\r\n        {userId, email, login, isAuth}\r\n});\r\n\r\nexport const getAuthUserData = () => async (dispatch) => {\r\n    let response = await authAPI.me();\r\n\r\n    if (response.data.resultCode === 0) {\r\n        let {id, login, email} = response.data.data;\r\n        dispatch(setAuthUserData(id, email, login, true));\r\n    }\r\n}\r\n\r\nexport const login = (email, password, rememberMe) => async (dispatch) => {\r\n    let response = await authAPI.login(email, password, rememberMe);\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(getAuthUserData())\r\n    } else {\r\n        let message = response.data.messages.length > 0 ? response.data.messages[0] : \"Some error\";\r\n        dispatch(stopSubmit(\"login\", {_error: message}));\r\n    }\r\n}\r\n\r\nexport const logout = () => async (dispatch) => {\r\n    let response = await authAPI.logout();\r\n\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setAuthUserData(null, null, null, false));\r\n    }\r\n}\r\n\r\nexport default authReducer;","import {authAPI} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\nimport {getAuthUserData} from \"./auth-reducer\";\r\n\r\nconst INITIALIZED_SUCCESS = 'SET_USER_DATA';\r\n\r\n\r\nlet initialState = {\r\n    initialized: false,\r\n};\r\n\r\n\r\nexport const appReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case INITIALIZED_SUCCESS:\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport const initializedSuccess = () => ({type: INITIALIZED_SUCCESS})\r\n\r\nexport const initializeApp = () => (dispatch) => {\r\n    let promise = dispatch(getAuthUserData());\r\n    Promise.all([promise])\r\n        .then(() => {\r\n        dispatch(initializedSuccess());\r\n    });\r\n}\r\n\r\n","import {applyMiddleware, combineReducers, compose, createStore} from \"redux\";\r\nimport profileReducer from \"./profile-reducer\";\r\nimport dialogsReducer from \"./dialogs-reducer\";\r\nimport sidebarReducer from \"./sidebar-reducer\";\r\nimport usersReducer from \"./users-reducer\";\r\nimport authReducer from \"./auth-reducer\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport {reducer as FormReducer} from 'redux-form'\r\nimport {appReducer} from \"./app-reducer\";\r\n\r\nlet reducers = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    sidebar: sidebarReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    form: FormReducer,\r\n    app: appReducer\r\n});\r\n\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunkMiddleware)));\r\n\r\n\r\nwindow.__store__ = store;\r\n\r\n\r\nexport default store;","import React from 'react';\r\nimport s from './Navbar.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Navbar = () => {\r\n    return (\r\n        <nav className={s.nav}>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/profile\" activeClassName={s.activeLink}>Profile</NavLink>\r\n            </div>\r\n            <div className={`${s.item} ${s.active}`}>\r\n                <NavLink to=\"/dialogs\" activeClassName={s.activeLink}>Messages</NavLink>\r\n            </div>\r\n            <div className={`${s.item} ${s.active}`}>\r\n                <NavLink to=\"/users\" activeClassName={s.activeLink}>Users</NavLink>\r\n            </div>\r\n\r\n            <div className={s.item}>\r\n                <a>News</a>\r\n            </div>\r\n            <div className={s.item}>\r\n                <a>Music</a>\r\n            </div>\r\n            <div className={s.item}>\r\n                <a>Settings</a>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Navbar;","import React, {useState} from 'react';\r\nimport styles from \"./Paginator.module.css\";\r\nimport cn from \"classnames\";\r\n\r\nlet Paginator = ({totalItemsCount, pageSize, currentPage, onPageChanged, portionSize = 10}) => {\r\n\r\n    let pagesCount = Math.ceil(totalItemsCount / pageSize);\r\n\r\n    let pages = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i);\r\n    }\r\n\r\n    let portionCount = Math.ceil(pagesCount / portionSize);\r\n    let [portionNumber, setPortionNumber] = useState(1);\r\n    let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\r\n    let rightPortionPageNumber = portionNumber * portionSize;\r\n\r\n\r\n    return <div className={styles.paginator}>\r\n        { portionNumber > 1 &&\r\n        <button onClick={() => { setPortionNumber(portionNumber - 1) }}>PREV</button> }\r\n\r\n        {pages\r\n            .filter(p => p >= leftPortionPageNumber && p<=rightPortionPageNumber)\r\n            .map((p) => {\r\n                return <span className={ cn({\r\n                    [styles.selectedPage]: currentPage === p\r\n                }, styles.pageNumber) }\r\n                             key={p}\r\n                             onClick={(e) => {\r\n                                 onPageChanged(p);\r\n                             }}>{p}</span>\r\n            })}\r\n        { portionCount > portionNumber &&\r\n        <button onClick={() => { setPortionNumber(portionNumber + 1) }}>NEXT</button> }\r\n\r\n\r\n    </div>\r\n}\r\n\r\nexport default Paginator;","import React from 'react';\r\nimport styles from \"./users.module.css\";\r\nimport userPhoto from \"../../assets/images/user.png\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\n\r\nlet User = ({user, followingInProgress, unfollow, follow}) => {\r\n    return (\r\n        <div>\r\n                <span>\r\n                    <div>\r\n                       <NavLink to={'/profile/' + user.id}>\r\n                        <img src={user.photos.small != null ? user.photos.small : userPhoto}\r\n                             className={styles.userPhoto}/>\r\n                       </NavLink>\r\n                    </div>\r\n                    <div>\r\n                        {user.followed\r\n                            ? <button disabled={followingInProgress\r\n                                .some(id => id === user.id)}\r\n                                      onClick={() => { unfollow(user.id) }}>\r\n                                Unfollow</button>\r\n                            : <button disabled={followingInProgress.some(id => id === user.id)}\r\n                                      onClick={() => { follow(user.id) }}>\r\n                                Follow</button>}\r\n\r\n                    </div>\r\n                </span>\r\n            <span>\r\n                    <span>\r\n                        <div>{user.name}</div>\r\n                        <div>{user.status}</div>\r\n                    </span>\r\n                    <span>\r\n                        <div>{\"user.location.country\"}</div>\r\n                        <div>{\"user.location.city\"}</div>\r\n                    </span>\r\n                </span>\r\n        </div>)\r\n}\r\n\r\nexport default User;","import React from 'react';\r\nimport Paginator from \"../common/Paginator/Paginator\";\r\nimport User from \"./User\";\r\n\r\nlet Users = ({currentPage, totalUsersCount, pageSize, onPageChanged, users, ...props}) => {\r\n    return <div>\r\n        <Paginator currentPage={currentPage} onPageChanged={onPageChanged}\r\n                   totalItemsCount={totalUsersCount} pageSize={pageSize}/>\r\n        <div>\r\n            {\r\n                users.map(u => <User user={u}\r\n                                     followingInProgress={props.followingInProgress}\r\n                                     key={u.id}\r\n                                     unfollow={props.unfollow}\r\n                                     follow={props.follow}\r\n                    />\r\n                )\r\n            }\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default Users;","import {createSelector} from \"reselect\";\r\n\r\nconst getUsersSelector = (state) => {\r\n    return state.usersPage.users;\r\n}\r\n\r\nexport const getUsers = createSelector(getUsersSelector,\r\n    (users) => {\r\n\r\n   return users.filter(u => true);\r\n})\r\n\r\nexport const getPageSize = (state) => {\r\n    return state.usersPage.pageSize;\r\n}\r\n\r\nexport const getTotalUsersCount = (state) => {\r\n    return state.usersPage.totalUsersCount;\r\n}\r\n\r\n\r\nexport const getCurrentPage = (state) => {\r\n    return state.usersPage.currentPage;\r\n}\r\n\r\n\r\nexport const getIsFetching = (state) => {\r\n    return state.usersPage.isFetching;\r\n}\r\n\r\n\r\nexport const getFollowingInProgress = (state) => {\r\n    return state.usersPage.followingInProgress;\r\n}","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {\r\n    follow,\r\n    setCurrentPage,\r\n    unfollow, toggleFollowingProgress, requestUsers\r\n} from '../../redux/users-reducer';\r\nimport Users from './Users';\r\nimport Preloader from \"../common/Preloader/Preloader\";\r\nimport {compose} from \"redux\";\r\nimport {\r\n    getCurrentPage,\r\n    getFollowingInProgress,\r\n    getIsFetching,\r\n    getPageSize,\r\n    getTotalUsersCount, getUsers\r\n} from \"../../redux/users-selectors\";\r\n\r\n\r\nclass UsersContainer extends React.Component {\r\n    componentDidMount() {\r\n        const {currentPage, pageSize} = this.props;\r\n        this.props.getUsers(currentPage, pageSize);\r\n    }\r\n\r\n    onPageChanged = (pageNumber) => {\r\n        const {pageSize} = this.props;\r\n        this.props.getUsers(pageNumber, pageSize);\r\n    }\r\n\r\n    render() {\r\n\r\n        return <>\r\n            {this.props.isFetching ? <Preloader/> : null}\r\n            <Users totalUsersCount={this.props.totalUsersCount}\r\n                   pageSize={this.props.pageSize}\r\n                   currentPage={this.props.currentPage}\r\n                   onPageChanged={this.onPageChanged}\r\n                   users={this.props.users}\r\n                   follow={this.props.follow}\r\n                   unfollow={this.props.unfollow}\r\n                   followingInProgress={this.props.followingInProgress}\r\n            />\r\n        </>\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        users: getUsers(state),\r\n        pageSize: getPageSize(state),\r\n        totalUsersCount: getTotalUsersCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        isFetching: getIsFetching(state),\r\n        followingInProgress: getFollowingInProgress(state)\r\n    }\r\n}\r\n\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {follow, unfollow, setCurrentPage, toggleFollowingProgress, getUsers: requestUsers})\r\n)(UsersContainer)","import React from 'react';\r\nimport s from './Header.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Header = (props) => {\r\n    return <header className={s.header}>\r\n        <img src='https://www.freelogodesign.org/Content/img/logo-ex-7.png' />\r\n\r\n        <div className={s.loginBlock}>\r\n            { props.isAuth\r\n                ? <div>{props.login} - <button onClick={props.logout}>Log out</button> </div>\r\n                : <NavLink to={'/login'}>Login</NavLink> }\r\n        </div>\r\n    </header>\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport Header from \"./Header\";\r\nimport {connect} from \"react-redux\";\r\nimport {logout} from \"../../redux/auth-reducer\";\r\n\r\nclass HeaderContainer extends React.Component {\r\n\r\n\r\n    render() {\r\n        return <Header {...this.props} />\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n    login: state.auth.login,\r\n});\r\n\r\nexport default connect(mapStateToProps, {logout})(HeaderContainer);","import React from 'react';\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {createField, Input} from \"../common/FormsControls/FormsControls\";\r\nimport {required} from \"../../utils/validators/validators\";\r\nimport {connect} from \"react-redux\";\r\nimport {login} from \"../../redux/auth-reducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport style from \"./../common/FormsControls/FormsControls.module.css\";\r\n\r\n\r\nconst LoginForm = ({handleSubmit, error}) => {\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            {createField(\"Email\", \"email\", [required], Input)}\r\n            {createField(\"Password\", \"password\", [required], Input, {type: \"password\"})}\r\n            {createField(null, \"rememberMe\", [], Input, {type: \"checkbox\"}, \"remember me\")}\r\n\r\n            {error && <div className={style.formSummaryError}>\r\n                {error}\r\n            </div>\r\n            }\r\n            <div>\r\n                <button>Login</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst LoginReduxForm = reduxForm({form: 'login'})(LoginForm)\r\n\r\nconst Login = (props) => {\r\n    const onSubmit = (formData) => {\r\n        props.login(formData.email, formData.password, formData.rememberMe);\r\n    }\r\n\r\n    if (props.isAuth) {\r\n        return <Redirect to={\"/profile\"}/>\r\n    }\r\n\r\n    return <div>\r\n        <h1>Login</h1>\r\n        <LoginReduxForm onSubmit={onSubmit}/>\r\n    </div>\r\n}\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport default connect(mapStateToProps, {login})(Login);","import React from \"react\";\r\nimport Preloader from \"../components/common/Preloader/Preloader\";\r\n\r\n\r\nexport const withSuspense = (Component) => {\r\n    return (props) => {\r\n        return <React.Suspense fallback={<Preloader />} >\r\n            <Component {...props} />\r\n        </React.Suspense>\r\n    };\r\n}","import React, {Component} from 'react';\r\nimport './App.css';\r\nimport Navbar from './components/Navbar/Navbar';\r\nimport {HashRouter, Route, withRouter} from \"react-router-dom\";\r\nimport UsersContainer from \"./components/Users/UsersContainer\";\r\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\r\nimport LoginPage from \"./components/Login/Login\";\r\nimport {connect, Provider} from \"react-redux\";\r\nimport {compose} from \"redux\";\r\nimport {initializeApp} from \"./redux/app-reducer\";\r\nimport Preloader from \"./components/common/Preloader/Preloader\";\r\nimport store from \"./redux/redux-store\";\r\nimport {withSuspense} from \"./hoc/withSuspense\";\r\n\r\nconst DialogsContainer = React.lazy(() => import('./components/Dialogs/DialogsContainer'));\r\nconst ProfileContainer = React.lazy(() => import('./components/Profile/ProfileContainer'));\r\n\r\n\r\nclass App extends Component {\r\n    componentDidMount() {\r\n        this.props.initializeApp();\r\n    }\r\n\r\n    render() {\r\n        if (!this.props.initialized) {\r\n            return <Preloader />\r\n        }\r\n\r\n        return (\r\n            <div className='app-wrapper'>\r\n                <HeaderContainer/>\r\n                <Navbar/>\r\n                <div className='app-wrapper-content'>\r\n                    <Route path='/dialogs'\r\n                           render={withSuspense(DialogsContainer)}/>\r\n\r\n                    <Route path='/profile/:userId?'\r\n                           render={withSuspense(ProfileContainer)} />\r\n\r\n                    <Route path='/users'\r\n                           render={() => <UsersContainer/>}/>\r\n\r\n                    <Route path='/login'\r\n                           render={() => <LoginPage/>}/>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    initialized: state.app.initialized\r\n})\r\n\r\nlet AppContainer = compose(\r\n    withRouter,\r\n    connect(mapStateToProps, {initializeApp}))(App);\r\n\r\nconst SamuraiJSApp = (props) => {\r\n    return <HashRouter>\r\n        <Provider store={store}>\r\n            <AppContainer />\r\n        </Provider>\r\n    </HashRouter>\r\n}\r\n\r\nexport default SamuraiJSApp;\r\n","import * as serviceWorker from './serviceWorker';\r\nimport store from \"./redux/redux-store\";\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport {BrowserRouter} from \"react-router-dom\";\r\nimport {Provider} from \"react-redux\";\r\nimport SamuraiJSApp from \"./App\";\r\n\r\nReactDOM.render(<SamuraiJSApp/>, document.getElementById('root'));\r\n\r\n\r\n// API\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","import React from 'react';\r\nimport preloader from \"../../../assets/images/preloader.svg\";\r\n\r\nlet Preloader = (props) => {\r\n    return <div  style={ { backgroundColor: 'white' } }>\r\n        <img src={preloader} />\r\n    </div>\r\n}\r\n\r\nexport default Preloader;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"FormControl\":\"FormsControls_FormControl__2eoG3\",\"error\":\"FormsControls_error__1k1ug\",\"formSummaryError\":\"FormsControls_formSummaryError__3Hnvw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paginator\":\"Paginator_paginator__DvTSB\",\"pageNumber\":\"Paginator_pageNumber__32gG-\",\"selectedPage\":\"Paginator_selectedPage__2-VS7\"};","export const required = value => {\r\n    if (value) return undefined;\r\n\r\n    return \"Field is required\";\r\n\r\n}\r\n\r\n\r\nexport const maxLengthCreator= (maxLength) => (value) => {\r\n    if (value.length > maxLength) return `Max length is ${maxLength} symbols`\r\n    return undefined;\r\n}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__2v6Qh\",\"loginBlock\":\"Header_loginBlock__3uozL\"};","import {profileAPI, usersAPI} from \"../api/api\";\r\n\r\nconst ADD_POST = 'ADD-POST';\r\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\r\nconst SET_STATUS = 'SET_STATUS';\r\nconst DELETE_POST = 'DELETE_POST';\r\n\r\nlet initialState = {\r\n    posts: [\r\n        {id: 1, message: 'Hi, how are you?', likesCount: 12},\r\n        {id: 2, message: 'It\\'s my first post', likesCount: 11},\r\n        {id: 3, message: 'Blabla', likesCount: 11},\r\n        {id: 4, message: 'Dada', likesCount: 11}\r\n    ],\r\n    profile: null,\r\n    status: \"\"\r\n};\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n\r\n    switch(action.type) {\r\n        case ADD_POST: {\r\n            let newPost = {\r\n                id: 5,\r\n                message: action.newPostText,\r\n                likesCount: 0\r\n            };\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, newPost],\r\n                newPostText: ''\r\n            };\r\n        }\r\n        case SET_STATUS: {\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            }\r\n        }\r\n        case DELETE_POST: {\r\n            return {...state, posts: state.posts.filter(p => p.id != action.postId)}\r\n        }\r\n        case SET_USER_PROFILE: {\r\n            return {...state, profile: action.profile}\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport const addPostActionCreator = (newPostText) => ({type: ADD_POST,newPostText})\r\nexport const setUserProfile = (profile) => ({type: SET_USER_PROFILE, profile})\r\nexport const setStatus = (status) => ({type: SET_STATUS, status})\r\nexport const deletePost = (postId) => ({type: DELETE_POST, postId})\r\n\r\nexport const getUserProfile = (userId) => (dispatch) => {\r\n    usersAPI.getProfile(userId).then(response => {\r\n        dispatch(setUserProfile(response.data));\r\n    });\r\n}\r\n\r\nexport const getStatus = (userId) => (dispatch) => {\r\n    profileAPI.getStatus(userId)\r\n        .then(response => {\r\n            dispatch(setStatus(response.data));\r\n        });\r\n}\r\n\r\nexport const updateStatus = (status) => (dispatch) => {\r\n    profileAPI.updateStatus(status)\r\n        .then(response => {\r\n            if (response.data.resultCode === 0) {\r\n                dispatch(setStatus(status));\r\n            }\r\n        });\r\n}\r\n\r\n\r\nexport default profileReducer;","const SEND_MESSAGE = 'SEND_MESSAGE';\r\n\r\nlet initialState = {\r\n    dialogs: [\r\n        {id: 1, name: 'Dimych'},\r\n        {id: 2, name: 'Andrew'},\r\n        {id: 3, name: 'Sveta'},\r\n        {id: 4, name: 'Sasha'},\r\n        {id: 5, name: 'Viktor'},\r\n        {id: 6, name: 'Valera'}\r\n    ],\r\n    messages: [\r\n        {id: 1, message: 'Hi'},\r\n        {id: 2, message: 'How is your it-kamasutra?'},\r\n        {id: 3, message: 'Yo'},\r\n        {id: 4, message: 'Yo'},\r\n        {id: 5, message: 'Yo'}\r\n    ]\r\n};\r\n\r\nconst dialogsReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SEND_MESSAGE:\r\n            let body = action.newMessageBody;\r\n            return {\r\n                ...state,\r\n                messages: [...state.messages, {id: 6, message: body}]\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const sendMessageCreator = (newMessageBody) => ({type: SEND_MESSAGE, newMessageBody})\r\n\r\n\r\nexport default dialogsReducer;"],"sourceRoot":""}